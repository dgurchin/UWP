#pragma checksum "D:\Delivery\src\Inventory.App\Views\Order\Details\OrderCard.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "E900DD3C011B83CDB5C73C740D0E3CD3"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class OrderCard : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Inventory_Views_PhoneCallConnectOrder_PhoneVisible(global::Inventory.Views.PhoneCallConnectOrder obj, global::System.Boolean value)
            {
                obj.PhoneVisible = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderCard_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderCard_Bindings
        {
            private global::Inventory.Views.OrderCard dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.StackPanel obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Inventory.Views.PhoneCallConnectOrder obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2TextDisabled = false;
            private static bool isobj3TextDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj6VisibilityDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13PhoneVisibleDisabled = false;
            private static bool isobj14TextDisabled = false;

            private OrderCard_obj1_BindingsTracking bindingsTracking;

            public OrderCard_obj1_Bindings()
            {
                this.bindingsTracking = new OrderCard_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 15 && columnNumber == 58)
                {
                    isobj2TextDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 58)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 58)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 24)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 58)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 24)
                {
                    isobj6VisibilityDisabled = true;
                }
                else if (lineNumber == 32 && columnNumber == 58)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 58)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 25)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 58)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 58)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 58)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 71)
                {
                    isobj13PhoneVisibleDisabled = true;
                }
                else if (lineNumber == 39 && columnNumber == 62)
                {
                    isobj14TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Order\Details\OrderCard.xaml line 15
                        this.obj2 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 3: // Views\Order\Details\OrderCard.xaml line 18
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\Order\Details\OrderCard.xaml line 21
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // Views\Order\Details\OrderCard.xaml line 23
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6: // Views\Order\Details\OrderCard.xaml line 25
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7: // Views\Order\Details\OrderCard.xaml line 32
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Views\Order\Details\OrderCard.xaml line 35
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\Order\Details\OrderCard.xaml line 37
                        this.obj9 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 10: // Views\Order\Details\OrderCard.xaml line 46
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // Views\Order\Details\OrderCard.xaml line 49
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // Views\Order\Details\OrderCard.xaml line 52
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\Order\Details\OrderCard.xaml line 56
                        this.obj13 = (global::Inventory.Views.PhoneCallConnectOrder)target;
                        break;
                    case 14: // Views\Order\Details\OrderCard.xaml line 39
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IOrderCard_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.OrderCard)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.OrderCard obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item(obj.Item, phase);
                    }
                }
            }
            private void Update_Item(global::Inventory.Models.OrderModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item_Id(obj.Id, phase);
                        this.Update_Item_Status(obj.Status, phase);
                        this.Update_Item_CreatedOn(obj.CreatedOn, phase);
                        this.Update_Item_IsMinOrderSumVisible(obj.IsMinOrderSumVisible, phase);
                        this.Update_Item_MinOrderSum(obj.MinOrderSum, phase);
                        this.Update_Item_CustomerId(obj.CustomerId, phase);
                        this.Update_Item_EditableCustomerName(obj.EditableCustomerName, phase);
                        this.Update_Item_IsNew(obj.IsNew, phase);
                        this.Update_Item_PaymentType(obj.PaymentType, phase);
                        this.Update_Item_Restaurant(obj.Restaurant, phase);
                        this.Update_Item_DeliveryDateTime(obj.DeliveryDateTime, phase);
                        this.Update_Item_PhoneNumber(obj.PhoneNumber, phase);
                    }
                }
            }
            private void Update_Item_Id(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 15
                    if (!isobj2TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj2, obj.ToString(), null);
                    }
                }
            }
            private void Update_Item_Status(global::Inventory.Models.OrderStatusModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Item_Status(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item_Status_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Item_Status_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 18
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_Item_CreatedOn(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 21
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, (global::System.String)this.LookupConverter("DateTimeOffsetToStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Item_IsMinOrderSumVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 23
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\Order\Details\OrderCard.xaml line 25
                    if (!isobj6VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_Item_MinOrderSum(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 25
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Item_CustomerId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 32
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj.ToString(), null);
                    }
                }
            }
            private void Update_Item_EditableCustomerName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 35
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_Item_IsNew(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 37
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\Order\Details\OrderCard.xaml line 56
                    if (!isobj13PhoneVisibleDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_PhoneCallConnectOrder_PhoneVisible(this.obj13, obj);
                    }
                }
            }
            private void Update_Item_PaymentType(global::Inventory.Models.PaymentTypeModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Item_PaymentType(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item_PaymentType_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Item_PaymentType_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 46
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_Item_Restaurant(global::Inventory.Models.RestaurantModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Item_Restaurant(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Item_Restaurant_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Item_Restaurant_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 49
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_Item_DeliveryDateTime(global::System.Nullable<global::System.DateTimeOffset> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 52
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, (global::System.String)this.LookupConverter("DateTimeOffsetToStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Item_PhoneNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Order\Details\OrderCard.xaml line 39
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderCard_obj1_BindingsTracking
            {
                private global::System.WeakReference<OrderCard_obj1_Bindings> weakRefToBindingObj; 

                public OrderCard_obj1_BindingsTracking(OrderCard_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderCard_obj1_Bindings>(obj);
                }

                public OrderCard_obj1_Bindings TryGetBindingObject()
                {
                    OrderCard_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Item(null);
                    UpdateChildListeners_Item_Status(null);
                    UpdateChildListeners_Item_PaymentType(null);
                    UpdateChildListeners_Item_Restaurant(null);
                }

                public void DependencyPropertyChanged_Item(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    OrderCard_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.OrderCard obj = sender as global::Inventory.Views.OrderCard;
                        if (obj != null)
                        {
                            bindings.Update_Item(obj.Item, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_Item = 0;
                public void UpdateChildListeners_(global::Inventory.Views.OrderCard obj)
                {
                    OrderCard_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.OrderCard.ItemProperty, tokenDPC_Item);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_Item = obj.RegisterPropertyChangedCallback(global::Inventory.Views.OrderCard.ItemProperty, DependencyPropertyChanged_Item);
                        }
                    }
                }
                public void PropertyChanged_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderCard_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderModel obj = sender as global::Inventory.Models.OrderModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Item_Id(obj.Id, DATA_CHANGED);
                                bindings.Update_Item_Status(obj.Status, DATA_CHANGED);
                                bindings.Update_Item_CreatedOn(obj.CreatedOn, DATA_CHANGED);
                                bindings.Update_Item_IsMinOrderSumVisible(obj.IsMinOrderSumVisible, DATA_CHANGED);
                                bindings.Update_Item_MinOrderSum(obj.MinOrderSum, DATA_CHANGED);
                                bindings.Update_Item_CustomerId(obj.CustomerId, DATA_CHANGED);
                                bindings.Update_Item_EditableCustomerName(obj.EditableCustomerName, DATA_CHANGED);
                                bindings.Update_Item_IsNew(obj.IsNew, DATA_CHANGED);
                                bindings.Update_Item_PaymentType(obj.PaymentType, DATA_CHANGED);
                                bindings.Update_Item_Restaurant(obj.Restaurant, DATA_CHANGED);
                                bindings.Update_Item_DeliveryDateTime(obj.DeliveryDateTime, DATA_CHANGED);
                                bindings.Update_Item_PhoneNumber(obj.PhoneNumber, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Id":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Id(obj.Id, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Status":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Status(obj.Status, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreatedOn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_CreatedOn(obj.CreatedOn, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsMinOrderSumVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_IsMinOrderSumVisible(obj.IsMinOrderSumVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MinOrderSum":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_MinOrderSum(obj.MinOrderSum, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CustomerId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_CustomerId(obj.CustomerId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EditableCustomerName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_EditableCustomerName(obj.EditableCustomerName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsNew":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_IsNew(obj.IsNew, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PaymentType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_PaymentType(obj.PaymentType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Restaurant":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Restaurant(obj.Restaurant, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DeliveryDateTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_DeliveryDateTime(obj.DeliveryDateTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PhoneNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_PhoneNumber(obj.PhoneNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderModel cache_Item = null;
                public void UpdateChildListeners_Item(global::Inventory.Models.OrderModel obj)
                {
                    if (obj != cache_Item)
                    {
                        if (cache_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Item).PropertyChanged -= PropertyChanged_Item;
                            cache_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Item;
                        }
                    }
                }
                public void PropertyChanged_Item_Status(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderCard_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderStatusModel obj = sender as global::Inventory.Models.OrderStatusModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Item_Status_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Status_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderStatusModel cache_Item_Status = null;
                public void UpdateChildListeners_Item_Status(global::Inventory.Models.OrderStatusModel obj)
                {
                    if (obj != cache_Item_Status)
                    {
                        if (cache_Item_Status != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Item_Status).PropertyChanged -= PropertyChanged_Item_Status;
                            cache_Item_Status = null;
                        }
                        if (obj != null)
                        {
                            cache_Item_Status = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Item_Status;
                        }
                    }
                }
                public void PropertyChanged_Item_PaymentType(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderCard_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.PaymentTypeModel obj = sender as global::Inventory.Models.PaymentTypeModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Item_PaymentType_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_PaymentType_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.PaymentTypeModel cache_Item_PaymentType = null;
                public void UpdateChildListeners_Item_PaymentType(global::Inventory.Models.PaymentTypeModel obj)
                {
                    if (obj != cache_Item_PaymentType)
                    {
                        if (cache_Item_PaymentType != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Item_PaymentType).PropertyChanged -= PropertyChanged_Item_PaymentType;
                            cache_Item_PaymentType = null;
                        }
                        if (obj != null)
                        {
                            cache_Item_PaymentType = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Item_PaymentType;
                        }
                    }
                }
                public void PropertyChanged_Item_Restaurant(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderCard_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.RestaurantModel obj = sender as global::Inventory.Models.RestaurantModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Item_Restaurant_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Item_Restaurant_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.RestaurantModel cache_Item_Restaurant = null;
                public void UpdateChildListeners_Item_Restaurant(global::Inventory.Models.RestaurantModel obj)
                {
                    if (obj != cache_Item_Restaurant)
                    {
                        if (cache_Item_Restaurant != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Item_Restaurant).PropertyChanged -= PropertyChanged_Item_Restaurant;
                            cache_Item_Restaurant = null;
                        }
                        if (obj != null)
                        {
                            cache_Item_Restaurant = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Item_Restaurant;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 13: // Views\Order\Details\OrderCard.xaml line 56
                {
                    this.callSection = (global::Inventory.Views.PhoneCallConnectOrder)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Order\Details\OrderCard.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    OrderCard_obj1_Bindings bindings = new OrderCard_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


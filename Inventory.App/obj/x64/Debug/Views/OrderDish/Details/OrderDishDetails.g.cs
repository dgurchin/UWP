#pragma checksum "D:\Delivery\src\Inventory.App\Views\OrderDish\Details\OrderDishDetails.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "8096B5BE6D049F465FF9F318C0B914F5"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class OrderDishDetails : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_Details_DetailsContent(global::Inventory.Controls.Details obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DetailsContent = value;
            }
            public static void Set_Inventory_Controls_Details_CanGoBack(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.CanGoBack = value;
            }
            public static void Set_Inventory_Controls_Details_IsEditMode(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.IsEditMode = value;
            }
            public static void Set_Inventory_Controls_Details_BackCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.BackCommand = value;
            }
            public static void Set_Inventory_Controls_Details_EditCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EditCommand = value;
            }
            public static void Set_Inventory_Controls_Details_DeleteCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Inventory_Controls_Details_SaveCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SaveCommand = value;
            }
            public static void Set_Inventory_Controls_Details_CancelCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Inventory_Views_OrderDishCard_Item(global::Inventory.Views.OrderDishCard obj, global::Inventory.Models.OrderDishModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.Models.OrderDishModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.Models.OrderDishModel), targetNullValue);
                }
                obj.Item = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Inventory_Views_OrderDishRecommendList_ViewModel(global::Inventory.Views.OrderDishRecommendList obj, global::Inventory.ViewModels.OrderDishRecommendViewModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.ViewModels.OrderDishRecommendViewModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.ViewModels.OrderDishRecommendViewModel), targetNullValue);
                }
                obj.ViewModel = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderDishDetails_obj7_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderDishDetails_Bindings
        {
            private global::Inventory.Models.OrderIngredientModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.Image obj10;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7IsCheckedDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10SourceDisabled = false;

            private OrderDishDetails_obj7_BindingsTracking bindingsTracking;

            public OrderDishDetails_obj7_Bindings()
            {
                this.bindingsTracking = new OrderDishDetails_obj7_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 70 && columnNumber == 55)
                {
                    isobj7IsCheckedDisabled = true;
                }
                else if (lineNumber == 87 && columnNumber == 65)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 88 && columnNumber == 65)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 77 && columnNumber == 48)
                {
                    isobj10SourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // Views\OrderDish\Details\OrderDishDetails.xaml line 70
                        this.obj7 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)target);
                        this.bindingsTracking.RegisterTwoWayListener_7((this.obj7.Target as global::Windows.UI.Xaml.Controls.Primitives.ToggleButton));
                        break;
                    case 8: // Views\OrderDish\Details\OrderDishDetails.xaml line 87
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\OrderDish\Details\OrderDishDetails.xaml line 88
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10: // Views\OrderDish\Details\OrderDishDetails.xaml line 77
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = 2;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj7.Target as global::Windows.UI.Xaml.Controls.Primitives.ToggleButton).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                    case 2:
                        global::Windows.UI.Xaml.Markup.XamlBindingHelper.ResumeRendering(this.obj10);
                        nextPhase = -1;
                        break;
                }
                this.Update_((global::Inventory.Models.OrderIngredientModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
                global::Windows.UI.Xaml.Markup.XamlBindingHelper.SuspendRendering(this.obj10);
            }

            // IOrderDishDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Models.OrderIngredientModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Models.OrderIngredientModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsSelected(obj.IsSelected, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0) | (1 << 2))) != 0)
                    {
                        this.Update_Ingredient(obj.Ingredient, phase);
                    }
                }
            }
            private void Update_IsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 70
                    if (!isobj7IsCheckedDisabled)
                    {
                        if ((this.obj7.Target as global::Windows.UI.Xaml.Controls.Primitives.ToggleButton) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked((this.obj7.Target as global::Windows.UI.Xaml.Controls.Primitives.ToggleButton), obj, null);
                        }
                    }
                }
            }
            private void Update_Ingredient(global::Inventory.Models.DishIngredientModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Ingredient(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Ingredient_Name(obj.Name, phase);
                        this.Update_Ingredient_Price(obj.Price, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0) | (1 << 2))) != 0)
                    {
                        this.Update_Ingredient_ThumbnailSource(obj.ThumbnailSource, phase);
                    }
                }
            }
            private void Update_Ingredient_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 87
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_Ingredient_Price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 88
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj.ToString(), null);
                    }
                }
            }
            private void Update_Ingredient_ThumbnailSource(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 2) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 77
                    if (!isobj10SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj10, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ObjectToImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                    }
                }
            }
            private void UpdateTwoWay_7_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.IsSelected = (global::System.Boolean)(this.obj7.Target as global::Windows.UI.Xaml.Controls.Primitives.ToggleButton).IsChecked;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderDishDetails_obj7_BindingsTracking
            {
                private global::System.WeakReference<OrderDishDetails_obj7_Bindings> weakRefToBindingObj; 

                public OrderDishDetails_obj7_BindingsTracking(OrderDishDetails_obj7_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderDishDetails_obj7_Bindings>(obj);
                }

                public OrderDishDetails_obj7_Bindings TryGetBindingObject()
                {
                    OrderDishDetails_obj7_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Ingredient(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj7_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderIngredientModel obj = sender as global::Inventory.Models.OrderIngredientModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_IsSelected(obj.IsSelected, DATA_CHANGED);
                                bindings.Update_Ingredient(obj.Ingredient, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsSelected(obj.IsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Ingredient":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Ingredient(obj.Ingredient, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.Models.OrderIngredientModel obj)
                {
                    OrderDishDetails_obj7_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_Ingredient(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj7_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.DishIngredientModel obj = sender as global::Inventory.Models.DishIngredientModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Ingredient_ThumbnailSource(obj.ThumbnailSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ThumbnailSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Ingredient_ThumbnailSource(obj.ThumbnailSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.DishIngredientModel cache_Ingredient = null;
                public void UpdateChildListeners_Ingredient(global::Inventory.Models.DishIngredientModel obj)
                {
                    if (obj != cache_Ingredient)
                    {
                        if (cache_Ingredient != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Ingredient).PropertyChanged -= PropertyChanged_Ingredient;
                            cache_Ingredient = null;
                        }
                        if (obj != null)
                        {
                            cache_Ingredient = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Ingredient;
                        }
                    }
                }
                public void RegisterTwoWayListener_7(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_IsChecked();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderDishDetails_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderDishDetails_Bindings
        {
            private global::Inventory.ViewModels.OrderDishDetailsViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Inventory.Views.OrderDishRecommendList obj6;
            private global::Inventory.Controls.FormTextBox obj11;
            private global::Inventory.Controls.FormComboBox obj12;
            private global::Inventory.Controls.FormTextBox obj13;
            private global::Inventory.Controls.FormTextBox obj14;
            private global::Inventory.Controls.FormTextBox obj15;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj6ViewModelDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12VisibilityDisabled = false;
            private static bool isobj12ItemsSourceDisabled = false;
            private static bool isobj12SelectedValueDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15TextDisabled = false;

            private OrderDishDetails_obj2_BindingsTracking bindingsTracking;

            public OrderDishDetails_obj2_Bindings()
            {
                this.bindingsTracking = new OrderDishDetails_obj2_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 59 && columnNumber == 61)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 88)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 205)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 95 && columnNumber == 88)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 80)
                {
                    isobj6ViewModelDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 58)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 60)
                {
                    isobj12VisibilityDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 40)
                {
                    isobj12ItemsSourceDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 40)
                {
                    isobj12SelectedValueDisabled = true;
                }
                else if (lineNumber == 40 && columnNumber == 68)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 63)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 61)
                {
                    isobj15TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\OrderDish\Details\OrderDishDetails.xaml line 27
                        this.obj2 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 3: // Views\OrderDish\Details\OrderDishDetails.xaml line 59
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\OrderDish\Details\OrderDishDetails.xaml line 60
                        this.obj4 = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)target;
                        break;
                    case 5: // Views\OrderDish\Details\OrderDishDetails.xaml line 95
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6: // Views\OrderDish\Details\OrderDishDetails.xaml line 96
                        this.obj6 = (global::Inventory.Views.OrderDishRecommendList)target;
                        break;
                    case 11: // Views\OrderDish\Details\OrderDishDetails.xaml line 34
                        this.obj11 = (global::Inventory.Controls.FormTextBox)target;
                        break;
                    case 12: // Views\OrderDish\Details\OrderDishDetails.xaml line 35
                        this.obj12 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\OrderDish\Details\OrderDishDetails.xaml line 40
                        this.obj13 = (global::Inventory.Controls.FormTextBox)target;
                        break;
                    case 14: // Views\OrderDish\Details\OrderDishDetails.xaml line 41
                        this.obj14 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 15: // Views\OrderDish\Details\OrderDishDetails.xaml line 43
                        this.obj15 = (global::Inventory.Controls.FormTextBox)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj2.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.ViewModels.OrderDishDetailsViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IOrderDishDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.ViewModels.OrderDishDetailsViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.ViewModels.OrderDishDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem(obj.EditableItem, phase);
                        this.Update_RecommendViewModel(obj.RecommendViewModel, phase);
                    }
                }
            }
            private void Update_EditableItem(global::Inventory.Models.OrderDishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_HasIngredients(obj.HasIngredients, phase);
                        this.Update_EditableItem_Ingredients(obj.Ingredients, phase);
                        this.Update_EditableItem_Dish(obj.Dish, phase);
                        this.Update_EditableItem_HasGarnishes(obj.HasGarnishes, phase);
                        this.Update_EditableItem_Garnishes(obj.Garnishes, phase);
                        this.Update_EditableItem_SelectedGarnish(obj.SelectedGarnish, phase);
                        this.Update_EditableItem_Price(obj.Price, phase);
                        this.Update_EditableItem_Quantity(obj.Quantity, phase);
                    }
                }
            }
            private void Update_EditableItem_HasIngredients(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 59
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 60
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_EditableItem_Ingredients(global::System.Collections.Generic.IList<global::Inventory.Models.OrderIngredientModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 60
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_RecommendViewModel(global::Inventory.ViewModels.OrderDishRecommendViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_RecommendViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_RecommendViewModel_HasItems(obj.HasItems, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 96
                    if (!isobj6ViewModelDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_OrderDishRecommendList_ViewModel(this.obj6, obj, null);
                    }
                }
            }
            private void Update_RecommendViewModel_HasItems(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 95
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_EditableItem_Dish(global::Inventory.Models.DishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem_Dish(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_Dish_Name(obj.Name, phase);
                        this.Update_EditableItem_Dish_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_EditableItem_Dish_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 34
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_EditableItem_HasGarnishes(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 35
                    if (!isobj12VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj12, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_EditableItem_Garnishes(global::System.Collections.Generic.IList<global::Inventory.Models.OrderGarnishModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 35
                    if (!isobj12ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj12, obj, null);
                    }
                }
            }
            private void Update_EditableItem_SelectedGarnish(global::Inventory.Models.OrderGarnishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem_SelectedGarnish(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 35
                    if (!isobj12SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj12, obj, null);
                    }
                }
            }
            private void Update_EditableItem_Price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 40
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj13, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_Quantity(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 41
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj14, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_Dish_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 43
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj15, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_12_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.SelectedGarnish = (global::Inventory.Models.OrderGarnishModel)this.obj12.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Quantity = (global::System.Decimal)this.LookupConverter("DecimalConverter").ConvertBack(this.obj14.Text, typeof(global::System.Decimal), null, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderDishDetails_obj2_BindingsTracking
            {
                private global::System.WeakReference<OrderDishDetails_obj2_Bindings> weakRefToBindingObj; 

                public OrderDishDetails_obj2_BindingsTracking(OrderDishDetails_obj2_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderDishDetails_obj2_Bindings>(obj);
                }

                public OrderDishDetails_obj2_Bindings TryGetBindingObject()
                {
                    OrderDishDetails_obj2_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_EditableItem(null);
                    UpdateChildListeners_RecommendViewModel(null);
                    UpdateChildListeners_EditableItem_Dish(null);
                    UpdateChildListeners_EditableItem_SelectedGarnish(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDishDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderDishDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                bindings.Update_RecommendViewModel(obj.RecommendViewModel, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RecommendViewModel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RecommendViewModel(obj.RecommendViewModel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.ViewModels.OrderDishDetailsViewModel obj)
                {
                    OrderDishDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderDishModel obj = sender as global::Inventory.Models.OrderDishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_HasIngredients(obj.HasIngredients, DATA_CHANGED);
                                bindings.Update_EditableItem_Ingredients(obj.Ingredients, DATA_CHANGED);
                                bindings.Update_EditableItem_Dish(obj.Dish, DATA_CHANGED);
                                bindings.Update_EditableItem_HasGarnishes(obj.HasGarnishes, DATA_CHANGED);
                                bindings.Update_EditableItem_Garnishes(obj.Garnishes, DATA_CHANGED);
                                bindings.Update_EditableItem_SelectedGarnish(obj.SelectedGarnish, DATA_CHANGED);
                                bindings.Update_EditableItem_Price(obj.Price, DATA_CHANGED);
                                bindings.Update_EditableItem_Quantity(obj.Quantity, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "HasIngredients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_HasIngredients(obj.HasIngredients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Ingredients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Ingredients(obj.Ingredients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Dish":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Dish(obj.Dish, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasGarnishes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_HasGarnishes(obj.HasGarnishes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Garnishes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Garnishes(obj.Garnishes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedGarnish":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_SelectedGarnish(obj.SelectedGarnish, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Price":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Price(obj.Price, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Quantity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Quantity(obj.Quantity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderDishModel cache_EditableItem = null;
                public void UpdateChildListeners_EditableItem(global::Inventory.Models.OrderDishModel obj)
                {
                    if (obj != cache_EditableItem)
                    {
                        if (cache_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem).PropertyChanged -= PropertyChanged_EditableItem;
                            cache_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem;
                        }
                    }
                }
                public void PropertyChanged_RecommendViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDishRecommendViewModel obj = sender as global::Inventory.ViewModels.OrderDishRecommendViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_RecommendViewModel_HasItems(obj.HasItems, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "HasItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RecommendViewModel_HasItems(obj.HasItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.OrderDishRecommendViewModel cache_RecommendViewModel = null;
                public void UpdateChildListeners_RecommendViewModel(global::Inventory.ViewModels.OrderDishRecommendViewModel obj)
                {
                    if (obj != cache_RecommendViewModel)
                    {
                        if (cache_RecommendViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_RecommendViewModel).PropertyChanged -= PropertyChanged_RecommendViewModel;
                            cache_RecommendViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_RecommendViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_RecommendViewModel;
                        }
                    }
                }
                public void PropertyChanged_EditableItem_Dish(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.DishModel obj = sender as global::Inventory.Models.DishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_Dish_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_EditableItem_Dish_Description(obj.Description, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Dish_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Description":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Dish_Description(obj.Description, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.DishModel cache_EditableItem_Dish = null;
                public void UpdateChildListeners_EditableItem_Dish(global::Inventory.Models.DishModel obj)
                {
                    if (obj != cache_EditableItem_Dish)
                    {
                        if (cache_EditableItem_Dish != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem_Dish).PropertyChanged -= PropertyChanged_EditableItem_Dish;
                            cache_EditableItem_Dish = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem_Dish = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem_Dish;
                        }
                    }
                }
                public void PropertyChanged_EditableItem_SelectedGarnish(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderGarnishModel obj = sender as global::Inventory.Models.OrderGarnishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderGarnishModel cache_EditableItem_SelectedGarnish = null;
                public void UpdateChildListeners_EditableItem_SelectedGarnish(global::Inventory.Models.OrderGarnishModel obj)
                {
                    if (obj != cache_EditableItem_SelectedGarnish)
                    {
                        if (cache_EditableItem_SelectedGarnish != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem_SelectedGarnish).PropertyChanged -= PropertyChanged_EditableItem_SelectedGarnish;
                            cache_EditableItem_SelectedGarnish = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem_SelectedGarnish = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem_SelectedGarnish;
                        }
                    }
                }
                public void RegisterTwoWayListener_12(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_14(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_Text();
                        }
                    };
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderDishDetails_obj16_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderDishDetails_Bindings
        {
            private global::Inventory.Models.DishIngredientModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj16;
            private global::Windows.UI.Xaml.Controls.Image obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj17SourceDisabled = false;
            private static bool isobj18TextDisabled = false;

            private OrderDishDetails_obj16_BindingsTracking bindingsTracking;

            public OrderDishDetails_obj16_Bindings()
            {
                this.bindingsTracking = new OrderDishDetails_obj16_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 21 && columnNumber == 24)
                {
                    isobj17SourceDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 28)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16: // Views\OrderDish\Details\OrderDishDetails.xaml line 16
                        this.obj16 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 17: // Views\OrderDish\Details\OrderDishDetails.xaml line 21
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 18: // Views\OrderDish\Details\OrderDishDetails.xaml line 22
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = 2;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj16.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                    case 2:
                        global::Windows.UI.Xaml.Markup.XamlBindingHelper.ResumeRendering(this.obj17);
                        nextPhase = -1;
                        break;
                }
                this.Update_((global::Inventory.Models.DishIngredientModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
                global::Windows.UI.Xaml.Markup.XamlBindingHelper.SuspendRendering(this.obj17);
            }

            // IOrderDishDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Models.DishIngredientModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Models.DishIngredientModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0) | (1 << 2))) != 0)
                    {
                        this.Update_ThumbnailSource(obj.ThumbnailSource, phase);
                    }
                }
            }
            private void Update_ThumbnailSource(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 2) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 21
                    if (!isobj17SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj17, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ObjectToImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 22
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderDishDetails_obj16_BindingsTracking
            {
                private global::System.WeakReference<OrderDishDetails_obj16_Bindings> weakRefToBindingObj; 

                public OrderDishDetails_obj16_BindingsTracking(OrderDishDetails_obj16_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderDishDetails_obj16_Bindings>(obj);
                }

                public OrderDishDetails_obj16_Bindings TryGetBindingObject()
                {
                    OrderDishDetails_obj16_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj16_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.DishIngredientModel obj = sender as global::Inventory.Models.DishIngredientModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ThumbnailSource(obj.ThumbnailSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ThumbnailSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ThumbnailSource(obj.ThumbnailSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.Models.DishIngredientModel obj)
                {
                    OrderDishDetails_obj16_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrderDishDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrderDishDetails_Bindings
        {
            private global::Inventory.Views.OrderDishDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Inventory.Controls.Details obj19;
            private global::Inventory.Views.OrderDishCard obj20;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj19DetailsContentDisabled = false;
            private static bool isobj19CanGoBackDisabled = false;
            private static bool isobj19IsEditModeDisabled = false;
            private static bool isobj19BackCommandDisabled = false;
            private static bool isobj19EditCommandDisabled = false;
            private static bool isobj19DeleteCommandDisabled = false;
            private static bool isobj19SaveCommandDisabled = false;
            private static bool isobj19CancelCommandDisabled = false;
            private static bool isobj20ItemDisabled = false;

            private OrderDishDetails_obj1_BindingsTracking bindingsTracking;

            public OrderDishDetails_obj1_Bindings()
            {
                this.bindingsTracking = new OrderDishDetails_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 115 && columnNumber == 27)
                {
                    isobj19DetailsContentDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 27)
                {
                    isobj19CanGoBackDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 27)
                {
                    isobj19IsEditModeDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 27)
                {
                    isobj19BackCommandDisabled = true;
                }
                else if (lineNumber == 120 && columnNumber == 27)
                {
                    isobj19EditCommandDisabled = true;
                }
                else if (lineNumber == 121 && columnNumber == 27)
                {
                    isobj19DeleteCommandDisabled = true;
                }
                else if (lineNumber == 122 && columnNumber == 27)
                {
                    isobj19SaveCommandDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 27)
                {
                    isobj19CancelCommandDisabled = true;
                }
                else if (lineNumber == 111 && columnNumber == 45)
                {
                    isobj20ItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 19: // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                        this.obj19 = (global::Inventory.Controls.Details)target;
                        break;
                    case 20: // Views\OrderDish\Details\OrderDishDetails.xaml line 111
                        this.obj20 = (global::Inventory.Views.OrderDishCard)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IOrderDishDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.OrderDishDetails)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.OrderDishDetails obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.OrderDishDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CanGoBack(obj.CanGoBack, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEditMode(obj.IsEditMode, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_BackCommand(obj.BackCommand, phase);
                        this.Update_ViewModel_EditCommand(obj.EditCommand, phase);
                        this.Update_ViewModel_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_ViewModel_SaveCommand(obj.SaveCommand, phase);
                        this.Update_ViewModel_CancelCommand(obj.CancelCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditableItem(obj.EditableItem, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19DetailsContentDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DetailsContent(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CanGoBack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19CanGoBackDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CanGoBack(this.obj19, obj);
                    }
                }
            }
            private void Update_ViewModel_IsEditMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19IsEditModeDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_IsEditMode(this.obj19, obj);
                    }
                }
            }
            private void Update_ViewModel_BackCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19BackCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_BackCommand(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EditCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19EditCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_EditCommand(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DeleteCommand(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19SaveCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_SaveCommand(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                    if (!isobj19CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CancelCommand(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EditableItem(global::Inventory.Models.OrderDishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_EditableItem(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\OrderDish\Details\OrderDishDetails.xaml line 111
                    if (!isobj20ItemDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_OrderDishCard_Item(this.obj20, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrderDishDetails_obj1_BindingsTracking
            {
                private global::System.WeakReference<OrderDishDetails_obj1_Bindings> weakRefToBindingObj; 

                public OrderDishDetails_obj1_BindingsTracking(OrderDishDetails_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrderDishDetails_obj1_Bindings>(obj);
                }

                public OrderDishDetails_obj1_Bindings TryGetBindingObject()
                {
                    OrderDishDetails_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_EditableItem(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    OrderDishDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.OrderDishDetails obj = sender as global::Inventory.Views.OrderDishDetails;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.OrderDishDetails obj)
                {
                    OrderDishDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.OrderDishDetails.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.OrderDishDetails.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDishDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderDishDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                bindings.Update_ViewModel_EditableItem(obj.EditableItem, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsEditMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.OrderDishDetailsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.OrderDishDetailsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrderDishDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderDishModel obj = sender as global::Inventory.Models.OrderDishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderDishModel cache_ViewModel_EditableItem = null;
                public void UpdateChildListeners_ViewModel_EditableItem(global::Inventory.Models.OrderDishModel obj)
                {
                    if (obj != cache_ViewModel_EditableItem)
                    {
                        if (cache_ViewModel_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_EditableItem).PropertyChanged -= PropertyChanged_ViewModel_EditableItem;
                            cache_ViewModel_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_EditableItem;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 7: // Views\OrderDish\Details\OrderDishDetails.xaml line 70
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element7 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element7).Click += this.ToggleButton_Click;
                }
                break;
            case 19: // Views\OrderDish\Details\OrderDishDetails.xaml line 114
                {
                    this.details = (global::Inventory.Controls.Details)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\OrderDish\Details\OrderDishDetails.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    OrderDishDetails_obj1_Bindings bindings = new OrderDishDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 2: // Views\OrderDish\Details\OrderDishDetails.xaml line 27
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    OrderDishDetails_obj2_Bindings bindings = new OrderDishDetails_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element2.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element2, bindings);
                }
                break;
            case 7: // Views\OrderDish\Details\OrderDishDetails.xaml line 70
                {                    
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element7 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)target;
                    OrderDishDetails_obj7_Bindings bindings = new OrderDishDetails_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element7.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element7, bindings);
                }
                break;
            case 16: // Views\OrderDish\Details\OrderDishDetails.xaml line 16
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element16 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    OrderDishDetails_obj16_Bindings bindings = new OrderDishDetails_obj16_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element16.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element16.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element16, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element16, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


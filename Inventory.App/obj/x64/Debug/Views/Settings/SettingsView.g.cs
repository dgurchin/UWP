#pragma checksum "D:\Delivery\src\Inventory.App\Views\Settings\SettingsView.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "116FFCF01E3A7D7714293ED28AD96D85"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class SettingsView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_Password(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Password = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISettingsView_Bindings
        {
            private global::Inventory.Views.SettingsView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ContentControl obj2;
            private global::Windows.UI.Xaml.Controls.TextBox obj3;
            private global::Windows.UI.Xaml.Controls.TextBox obj4;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj5;
            private global::Windows.UI.Xaml.Controls.TextBox obj10;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj11;
            private global::Windows.UI.Xaml.Controls.TextBox obj12;
            private global::Windows.UI.Xaml.Controls.TextBox obj13;
            private global::Windows.UI.Xaml.Controls.ComboBox obj14;
            private global::Windows.UI.Xaml.Controls.StackPanel obj15;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj16;
            private global::Windows.UI.Xaml.Controls.Button obj17;
            private global::Windows.UI.Xaml.Controls.RadioButton obj18;
            private global::Windows.UI.Xaml.Controls.RadioButton obj19;
            private global::Windows.UI.Xaml.Controls.ContentControl obj20;
            private global::Windows.UI.Xaml.Controls.TextBox obj21;
            private global::Windows.UI.Xaml.Controls.Button obj22;
            private global::Windows.UI.Xaml.Controls.Button obj23;
            private global::Windows.UI.Xaml.Controls.Button obj24;
            private global::Windows.UI.Xaml.Controls.ContentControl obj25;
            private global::Windows.UI.Xaml.Controls.Button obj26;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2IsEnabledDisabled = false;
            private static bool isobj3TextDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5PasswordDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11PasswordDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14SelectedItemDisabled = false;
            private static bool isobj15VisibilityDisabled = false;
            private static bool isobj16IsOnDisabled = false;
            private static bool isobj17CommandDisabled = false;
            private static bool isobj18IsCheckedDisabled = false;
            private static bool isobj19IsCheckedDisabled = false;
            private static bool isobj20IsEnabledDisabled = false;
            private static bool isobj21TextDisabled = false;
            private static bool isobj22CommandDisabled = false;
            private static bool isobj23CommandDisabled = false;
            private static bool isobj24CommandDisabled = false;
            private static bool isobj25IsEnabledDisabled = false;
            private static bool isobj26CommandDisabled = false;

            private SettingsView_obj1_BindingsTracking bindingsTracking;

            public SettingsView_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 11 && columnNumber == 25)
                {
                    isobj2IsEnabledDisabled = true;
                }
                else if (lineNumber == 124 && columnNumber == 38)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 126 && columnNumber == 38)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 128 && columnNumber == 42)
                {
                    isobj5PasswordDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 46)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 50)
                {
                    isobj11PasswordDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 46)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 88 && columnNumber == 46)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 47)
                {
                    isobj14SelectedItemDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 55)
                {
                    isobj15VisibilityDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 47)
                {
                    isobj16IsOnDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 98)
                {
                    isobj17CommandDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 82)
                {
                    isobj18IsCheckedDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 86)
                {
                    isobj19IsCheckedDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 53)
                {
                    isobj20IsEnabledDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 54)
                {
                    isobj21TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 88)
                {
                    isobj22CommandDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 86)
                {
                    isobj23CommandDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 86)
                {
                    isobj24CommandDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 53)
                {
                    isobj25IsEnabledDisabled = true;
                }
                else if (lineNumber == 38 && columnNumber == 79)
                {
                    isobj26CommandDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Settings\SettingsView.xaml line 11
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ContentControl)target;
                        break;
                    case 3: // Views\Settings\SettingsView.xaml line 124
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // Views\Settings\SettingsView.xaml line 126
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\Settings\SettingsView.xaml line 128
                        this.obj5 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 10: // Views\Settings\SettingsView.xaml line 82
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\Settings\SettingsView.xaml line 84
                        this.obj11 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\Settings\SettingsView.xaml line 86
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\Settings\SettingsView.xaml line 88
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Views\Settings\SettingsView.xaml line 90
                        this.obj14 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 15: // Views\Settings\SettingsView.xaml line 66
                        this.obj15 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 16: // Views\Settings\SettingsView.xaml line 68
                        this.obj16 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Views\Settings\SettingsView.xaml line 64
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 18: // Views\Settings\SettingsView.xaml line 31
                        this.obj18 = (global::Windows.UI.Xaml.Controls.RadioButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Views\Settings\SettingsView.xaml line 42
                        this.obj19 = (global::Windows.UI.Xaml.Controls.RadioButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 20: // Views\Settings\SettingsView.xaml line 43
                        this.obj20 = (global::Windows.UI.Xaml.Controls.ContentControl)target;
                        break;
                    case 21: // Views\Settings\SettingsView.xaml line 49
                        this.obj21 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_21(this.obj21);
                        break;
                    case 22: // Views\Settings\SettingsView.xaml line 52
                        this.obj22 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 23: // Views\Settings\SettingsView.xaml line 56
                        this.obj23 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 24: // Views\Settings\SettingsView.xaml line 57
                        this.obj24 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 25: // Views\Settings\SettingsView.xaml line 33
                        this.obj25 = (global::Windows.UI.Xaml.Controls.ContentControl)target;
                        break;
                    case 26: // Views\Settings\SettingsView.xaml line 38
                        this.obj26 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // ISettingsView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.SettingsView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.SettingsView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.SettingsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsBusy(obj.IsBusy, phase);
                        this.Update_ViewModel_MonitorHost(obj.MonitorHost, phase);
                        this.Update_ViewModel_MonitorUserName(obj.MonitorUserName, phase);
                        this.Update_ViewModel_MonitorPassword(obj.MonitorPassword, phase);
                        this.Update_ViewModel_SipPhoneName(obj.SipPhoneName, phase);
                        this.Update_ViewModel_SipPhonePassword(obj.SipPhonePassword, phase);
                        this.Update_ViewModel_SipPhoneDomain(obj.SipPhoneDomain, phase);
                        this.Update_ViewModel_SipPhonePort(obj.SipPhonePort, phase);
                        this.Update_ViewModel_SipPhoneTransportProtocol(obj.SipPhoneTransportProtocol, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEnabledTestMode(obj.IsEnabledTestMode, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsRandomErrorsEnabled(obj.IsRandomErrorsEnabled, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SaveChangesCommand(obj.SaveChangesCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsLocalProvider(obj.IsLocalProvider, phase);
                        this.Update_ViewModel_IsSqlProvider(obj.IsSqlProvider, phase);
                        this.Update_ViewModel_SqlConnectionString(obj.SqlConnectionString, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ValidateSqlConnectionCommand(obj.ValidateSqlConnectionCommand, phase);
                        this.Update_ViewModel_ApplyMigrationCommand(obj.ApplyMigrationCommand, phase);
                        this.Update_ViewModel_CopyProductImagesCommand(obj.CopyProductImagesCommand, phase);
                        this.Update_ViewModel_ResetLocalDataCommand(obj.ResetLocalDataCommand, phase);
                    }
                }
            }
            private void Update_ViewModel_IsBusy(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 11
                    if (!isobj2IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj2, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_ViewModel_MonitorHost(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 124
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MonitorUserName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 126
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MonitorPassword(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 128
                    if (!isobj5PasswordDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SipPhoneName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 82
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SipPhonePassword(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 84
                    if (!isobj11PasswordDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj11, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SipPhoneDomain(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 86
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SipPhonePort(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 88
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SipPhoneTransportProtocol(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 90
                    if (!isobj14SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj14, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsEnabledTestMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 66
                    if (!isobj15VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj15, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_IsRandomErrorsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 68
                    if (!isobj16IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj16, obj);
                    }
                }
            }
            private void Update_ViewModel_SaveChangesCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 64
                    if (!isobj17CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsLocalProvider(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 31
                    if (!isobj18IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj18, obj, null);
                    }
                    // Views\Settings\SettingsView.xaml line 33
                    if (!isobj25IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj25, obj);
                    }
                }
            }
            private void Update_ViewModel_IsSqlProvider(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 42
                    if (!isobj19IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj19, obj, null);
                    }
                    // Views\Settings\SettingsView.xaml line 43
                    if (!isobj20IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj20, obj);
                    }
                }
            }
            private void Update_ViewModel_SqlConnectionString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 49
                    if (!isobj21TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj21, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ValidateSqlConnectionCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 52
                    if (!isobj22CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj22, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ApplyMigrationCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 56
                    if (!isobj23CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj23, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CopyProductImagesCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 57
                    if (!isobj24CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj24, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ResetLocalDataCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Settings\SettingsView.xaml line 38
                    if (!isobj26CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj26, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_3_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MonitorHost = this.obj3.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MonitorUserName = this.obj4.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MonitorPassword = this.obj5.Password;
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SipPhoneName = this.obj10.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SipPhonePassword = this.obj11.Password;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SipPhoneDomain = this.obj12.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SipPhonePort = this.obj13.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SipPhoneTransportProtocol = (global::System.String)this.obj14.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsRandomErrorsEnabled = this.obj16.IsOn;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsLocalProvider = (global::System.Boolean)this.obj18.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_19_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsSqlProvider = (global::System.Boolean)this.obj19.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_21_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SqlConnectionString = this.obj21.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingsView_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingsView_obj1_Bindings> weakRefToBindingObj; 

                public SettingsView_obj1_BindingsTracking(SettingsView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingsView_obj1_Bindings>(obj);
                }

                public SettingsView_obj1_Bindings TryGetBindingObject()
                {
                    SettingsView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.SettingsViewModel obj = sender as global::Inventory.ViewModels.SettingsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsBusy(obj.IsBusy, DATA_CHANGED);
                                bindings.Update_ViewModel_MonitorHost(obj.MonitorHost, DATA_CHANGED);
                                bindings.Update_ViewModel_MonitorUserName(obj.MonitorUserName, DATA_CHANGED);
                                bindings.Update_ViewModel_MonitorPassword(obj.MonitorPassword, DATA_CHANGED);
                                bindings.Update_ViewModel_SipPhoneName(obj.SipPhoneName, DATA_CHANGED);
                                bindings.Update_ViewModel_SipPhonePassword(obj.SipPhonePassword, DATA_CHANGED);
                                bindings.Update_ViewModel_SipPhoneDomain(obj.SipPhoneDomain, DATA_CHANGED);
                                bindings.Update_ViewModel_SipPhonePort(obj.SipPhonePort, DATA_CHANGED);
                                bindings.Update_ViewModel_SipPhoneTransportProtocol(obj.SipPhoneTransportProtocol, DATA_CHANGED);
                                bindings.Update_ViewModel_IsRandomErrorsEnabled(obj.IsRandomErrorsEnabled, DATA_CHANGED);
                                bindings.Update_ViewModel_IsLocalProvider(obj.IsLocalProvider, DATA_CHANGED);
                                bindings.Update_ViewModel_IsSqlProvider(obj.IsSqlProvider, DATA_CHANGED);
                                bindings.Update_ViewModel_SqlConnectionString(obj.SqlConnectionString, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsBusy":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsBusy(obj.IsBusy, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MonitorHost":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MonitorHost(obj.MonitorHost, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MonitorUserName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MonitorUserName(obj.MonitorUserName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MonitorPassword":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MonitorPassword(obj.MonitorPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SipPhoneName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SipPhoneName(obj.SipPhoneName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SipPhonePassword":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SipPhonePassword(obj.SipPhonePassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SipPhoneDomain":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SipPhoneDomain(obj.SipPhoneDomain, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SipPhonePort":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SipPhonePort(obj.SipPhonePort, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SipPhoneTransportProtocol":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SipPhoneTransportProtocol(obj.SipPhoneTransportProtocol, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsRandomErrorsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsRandomErrorsEnabled(obj.IsRandomErrorsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsLocalProvider":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsLocalProvider(obj.IsLocalProvider, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSqlProvider":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsSqlProvider(obj.IsSqlProvider, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SqlConnectionString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SqlConnectionString(obj.SqlConnectionString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.SettingsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.SettingsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_4(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.PasswordBox.PasswordProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Password();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_11(global::Windows.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.PasswordBox.PasswordProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Password();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_13(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_14(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_SelectedItem();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_18(global::Windows.UI.Xaml.Controls.RadioButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Windows.UI.Xaml.Controls.RadioButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_21(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_21_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 6: // Views\Settings\SettingsView.xaml line 117
                {
                    this.audioCodecs = (global::Inventory.Views.AudioCodecs)(target);
                }
                break;
            case 7: // Views\Settings\SettingsView.xaml line 114
                {
                    this.audioParameters = (global::Inventory.Views.AudioParameters)(target);
                }
                break;
            case 8: // Views\Settings\SettingsView.xaml line 107
                {
                    this.SaveSettingSIP = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.SaveSettingSIP).Click += this.SaveSettingSIP_Click;
                }
                break;
            case 9: // Views\Settings\SettingsView.xaml line 99
                {
                    this.phoneView = (global::Inventory.Views.PhoneCallConnect)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Settings\SettingsView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SettingsView_obj1_Bindings bindings = new SettingsView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


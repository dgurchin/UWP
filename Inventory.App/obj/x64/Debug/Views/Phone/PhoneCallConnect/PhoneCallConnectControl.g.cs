#pragma checksum "D:\Delivery\src\Inventory.App\Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "98EDCF586078975CC10BE2300BD5A02A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class PhoneCallConnectControl : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_IconElement_Foreground(global::Windows.UI.Xaml.Controls.IconElement obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PhoneCallConnectControl_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPhoneCallConnectControl_Bindings
        {
            private global::Inventory.Views.PhoneCallConnectControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.StackPanel obj2;
            private global::Windows.UI.Xaml.Controls.Button obj3;
            private global::Windows.UI.Xaml.Controls.StackPanel obj4;
            private global::Windows.UI.Xaml.Controls.StackPanel obj5;
            private global::Windows.UI.Xaml.Controls.StackPanel obj6;
            private global::Windows.UI.Xaml.Controls.Grid obj7;
            private global::Windows.UI.Xaml.Controls.Grid obj8;
            private global::Windows.UI.Xaml.Controls.TextBox obj9;
            private global::Windows.UI.Xaml.Controls.Slider obj10;
            private global::Windows.UI.Xaml.Controls.Slider obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Windows.UI.Xaml.Controls.Button obj13;
            private global::Windows.UI.Xaml.Controls.Button obj16;
            private global::Windows.UI.Xaml.Controls.Button obj17;
            private global::Windows.UI.Xaml.Controls.StackPanel obj22;
            private global::Windows.UI.Xaml.Controls.TextBox obj23;
            private global::Windows.UI.Xaml.Controls.FontIcon obj24;
            private global::Windows.UI.Xaml.Controls.TextBlock obj25;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2VisibilityDisabled = false;
            private static bool isobj3CommandDisabled = false;
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj6VisibilityDisabled = false;
            private static bool isobj7WidthDisabled = false;
            private static bool isobj8WidthDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10ValueDisabled = false;
            private static bool isobj11ValueDisabled = false;
            private static bool isobj12CommandDisabled = false;
            private static bool isobj13CommandDisabled = false;
            private static bool isobj16ForegroundDisabled = false;
            private static bool isobj16CommandDisabled = false;
            private static bool isobj17CommandDisabled = false;
            private static bool isobj22VisibilityDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj23IsEnabledDisabled = false;
            private static bool isobj24ForegroundDisabled = false;
            private static bool isobj25TextDisabled = false;

            private PhoneCallConnectControl_obj1_BindingsTracking bindingsTracking;

            public PhoneCallConnectControl_obj1_Bindings()
            {
                this.bindingsTracking = new PhoneCallConnectControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 30 && columnNumber == 33)
                {
                    isobj2VisibilityDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 95)
                {
                    isobj3CommandDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 139)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 63)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 70)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 127 && columnNumber == 80)
                {
                    isobj6VisibilityDisabled = true;
                }
                else if (lineNumber == 128 && columnNumber == 36)
                {
                    isobj7WidthDisabled = true;
                }
                else if (lineNumber == 140 && columnNumber == 36)
                {
                    isobj8WidthDisabled = true;
                }
                else if (lineNumber == 152 && columnNumber == 119)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 150 && columnNumber == 135)
                {
                    isobj10ValueDisabled = true;
                }
                else if (lineNumber == 138 && columnNumber == 130)
                {
                    isobj11ValueDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 37)
                {
                    isobj12CommandDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 38)
                {
                    isobj13CommandDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 81)
                {
                    isobj16ForegroundDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 166)
                {
                    isobj16CommandDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 81)
                {
                    isobj17CommandDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 37)
                {
                    isobj22VisibilityDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 81)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 132)
                {
                    isobj23IsEnabledDisabled = true;
                }
                else if (lineNumber == 17 && columnNumber == 87)
                {
                    isobj24ForegroundDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 40)
                {
                    isobj25TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 30
                        this.obj2 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 3: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 31
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 4: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 49
                        this.obj4 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 5: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 89
                        this.obj5 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 6: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 127
                        this.obj6 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 7: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 128
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 8: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 140
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 9: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 152
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 150
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 138
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 90
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 13: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 108
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 16: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 50
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 17: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 70
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 22: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 25
                        this.obj22 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 23: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 27
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 24: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 17
                        this.obj24 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 25: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 22
                        this.obj25 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IPhoneCallConnectControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.PhoneCallConnectControl)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.PhoneCallConnectControl obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_PhoneNumber(obj.PhoneNumber, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.Services.PhoneCallViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_PhoneActive(obj.PhoneActive, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CallphoneStart(obj.CallphoneStart, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ClockNot(obj.ClockNot, phase);
                        this.Update_ViewModel_ClockRunning(obj.ClockRunning, phase);
                        this.Update_ViewModel_ClockWaitIncoming(obj.ClockWaitIncoming, phase);
                        this.Update_ViewModel_ClockRunningText(obj.ClockRunningText, phase);
                        this.Update_ViewModel_SliderVolumeMicrophone(obj.SliderVolumeMicrophone, phase);
                        this.Update_ViewModel_SliderVolumeSound(obj.SliderVolumeSound, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CallPhoneAccept(obj.CallPhoneAccept, phase);
                        this.Update_ViewModel_CallPhoneReject(obj.CallPhoneReject, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_MicrophoneColor(obj.MicrophoneColor, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_MicrophoneOnOff(obj.MicrophoneOnOff, phase);
                        this.Update_ViewModel_CallPhoneEnd(obj.CallPhoneEnd, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_PhoneVisible(obj.PhoneVisible, phase);
                        this.Update_ViewModel_PhoneNumber(obj.PhoneNumber, phase);
                        this.Update_ViewModel_NotIncommingCall(obj.NotIncommingCall, phase);
                        this.Update_ViewModel_StatusTextColor(obj.StatusTextColor, phase);
                        this.Update_ViewModel_StatusText(obj.StatusText, phase);
                    }
                }
            }
            private void Update_ViewModel_PhoneActive(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 30
                    if (!isobj2VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj2, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_CallphoneStart(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 31
                    if (!isobj3CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ClockNot(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 31
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_ClockRunning(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 49
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 127
                    if (!isobj6VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_ClockWaitIncoming(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 89
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_PhoneNumber(global::Windows.UI.Xaml.Controls.TextBox obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_PhoneNumber_Width(obj.Width, phase);
                    }
                }
            }
            private void Update_PhoneNumber_Width(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 128
                    if (!isobj7WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj7, obj);
                    }
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 140
                    if (!isobj8WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj8, obj);
                    }
                }
            }
            private void Update_ViewModel_ClockRunningText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 152
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SliderVolumeMicrophone(global::System.Single obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 150
                    if (!isobj10ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj10, obj);
                    }
                }
            }
            private void Update_ViewModel_SliderVolumeSound(global::System.Single obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 138
                    if (!isobj11ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj11, obj);
                    }
                }
            }
            private void Update_ViewModel_CallPhoneAccept(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 90
                    if (!isobj12CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CallPhoneReject(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 108
                    if (!isobj13CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj13, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MicrophoneColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 50
                    if (!isobj16ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MicrophoneOnOff(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 50
                    if (!isobj16CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CallPhoneEnd(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 70
                    if (!isobj17CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PhoneVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 25
                    if (!isobj22VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj22, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_PhoneNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 27
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update_ViewModel_NotIncommingCall(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 27
                    if (!isobj23IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj23, obj);
                    }
                }
            }
            private void Update_ViewModel_StatusTextColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 17
                    if (!isobj24ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj24, obj, null);
                    }
                }
            }
            private void Update_ViewModel_StatusText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 22
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj25, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_9_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ClockRunningText = this.obj9.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SliderVolumeMicrophone = (global::System.Single)this.obj10.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SliderVolumeSound = (global::System.Single)this.obj11.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_23_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PhoneNumber = this.obj23.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_23_IsEnabled()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.NotIncommingCall = this.obj23.IsEnabled;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PhoneCallConnectControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<PhoneCallConnectControl_obj1_Bindings> weakRefToBindingObj; 

                public PhoneCallConnectControl_obj1_BindingsTracking(PhoneCallConnectControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PhoneCallConnectControl_obj1_Bindings>(obj);
                }

                public PhoneCallConnectControl_obj1_Bindings TryGetBindingObject()
                {
                    PhoneCallConnectControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PhoneCallConnectControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Services.PhoneCallViewModel obj = sender as global::Inventory.Services.PhoneCallViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_PhoneActive(obj.PhoneActive, DATA_CHANGED);
                                bindings.Update_ViewModel_ClockNot(obj.ClockNot, DATA_CHANGED);
                                bindings.Update_ViewModel_ClockRunning(obj.ClockRunning, DATA_CHANGED);
                                bindings.Update_ViewModel_ClockWaitIncoming(obj.ClockWaitIncoming, DATA_CHANGED);
                                bindings.Update_ViewModel_ClockRunningText(obj.ClockRunningText, DATA_CHANGED);
                                bindings.Update_ViewModel_SliderVolumeMicrophone(obj.SliderVolumeMicrophone, DATA_CHANGED);
                                bindings.Update_ViewModel_SliderVolumeSound(obj.SliderVolumeSound, DATA_CHANGED);
                                bindings.Update_ViewModel_MicrophoneColor(obj.MicrophoneColor, DATA_CHANGED);
                                bindings.Update_ViewModel_PhoneVisible(obj.PhoneVisible, DATA_CHANGED);
                                bindings.Update_ViewModel_PhoneNumber(obj.PhoneNumber, DATA_CHANGED);
                                bindings.Update_ViewModel_NotIncommingCall(obj.NotIncommingCall, DATA_CHANGED);
                                bindings.Update_ViewModel_StatusTextColor(obj.StatusTextColor, DATA_CHANGED);
                                bindings.Update_ViewModel_StatusText(obj.StatusText, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PhoneActive":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PhoneActive(obj.PhoneActive, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ClockNot":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ClockNot(obj.ClockNot, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ClockRunning":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ClockRunning(obj.ClockRunning, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ClockWaitIncoming":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ClockWaitIncoming(obj.ClockWaitIncoming, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ClockRunningText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ClockRunningText(obj.ClockRunningText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SliderVolumeMicrophone":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SliderVolumeMicrophone(obj.SliderVolumeMicrophone, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SliderVolumeSound":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SliderVolumeSound(obj.SliderVolumeSound, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MicrophoneColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MicrophoneColor(obj.MicrophoneColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PhoneVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PhoneVisible(obj.PhoneVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PhoneNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PhoneNumber(obj.PhoneNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NotIncommingCall":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NotIncommingCall(obj.NotIncommingCall, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StatusTextColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StatusTextColor(obj.StatusTextColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StatusText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StatusText(obj.StatusText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Services.PhoneCallViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.Services.PhoneCallViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_10(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_11(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_23(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_Text();
                        }
                    };
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.IsEnabledProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_IsEnabled();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 31
                {
                    this.ButtonCall = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 4: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 49
                {
                    this.GroupButtonPhone = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 5: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 89
                {
                    this.GroupButtonAnswerReject = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 9: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 152
                {
                    this.CallTimeDuration = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 10: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 150
                {
                    this.SliderVolumeMicrophone = (global::Windows.UI.Xaml.Controls.Slider)(target);
                }
                break;
            case 11: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 138
                {
                    this.SliderVolumeSound = (global::Windows.UI.Xaml.Controls.Slider)(target);
                }
                break;
            case 16: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 50
                {
                    this.ButtonMicrophone = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 21: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 16
                {
                    this.LayoutRoot = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.LayoutRoot).Tapped += this.PhoneSatus_Tapped;
                }
                break;
            case 23: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 27
                {
                    this.PhoneNumber = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Phone\PhoneCallConnect\PhoneCallConnectControl.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    PhoneCallConnectControl_obj1_Bindings bindings = new PhoneCallConnectControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


#pragma checksum "D:\Delivery\src\Inventory.App\Views\Customer\Details\CustomerDetails.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "A321EC51D349BB59D300FAFF321C3272"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class CustomerDetails : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_Details_DetailsContent(global::Inventory.Controls.Details obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DetailsContent = value;
            }
            public static void Set_Inventory_Views_CustomerCard_ViewModel(global::Inventory.Views.CustomerCard obj, global::Inventory.ViewModels.CustomerDetailsViewModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.ViewModels.CustomerDetailsViewModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.ViewModels.CustomerDetailsViewModel), targetNullValue);
                }
                obj.ViewModel = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Grid_RowSpan(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Int32 value)
            {
                global::Windows.UI.Xaml.Controls.Grid.SetRowSpan(obj, value);
            }
            public static void Set_Inventory_Controls_Details_CanGoBack(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.CanGoBack = value;
            }
            public static void Set_Inventory_Controls_Details_IsEditMode(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.IsEditMode = value;
            }
            public static void Set_Inventory_Controls_Details_BackCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.BackCommand = value;
            }
            public static void Set_Inventory_Controls_Details_EditCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EditCommand = value;
            }
            public static void Set_Inventory_Controls_Details_DeleteCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Inventory_Controls_Details_SaveCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SaveCommand = value;
            }
            public static void Set_Inventory_Controls_Details_CancelCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Inventory_Views_CustomerAddressList_ViewModel(global::Inventory.Views.CustomerAddressList obj, global::Inventory.ViewModels.CustomerAddressListViewModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.ViewModels.CustomerAddressListViewModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.ViewModels.CustomerAddressListViewModel), targetNullValue);
                }
                obj.ViewModel = value;
            }
            public static void Set_Inventory_Views_CommunicationList_ViewModel(global::Inventory.Views.CommunicationList obj, global::Inventory.ViewModels.CommunicationListViewModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.ViewModels.CommunicationListViewModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.ViewModels.CommunicationListViewModel), targetNullValue);
                }
                obj.ViewModel = value;
            }
            public static void Set_Inventory_Views_CustomerCard_Item(global::Inventory.Views.CustomerCard obj, global::Inventory.Models.CustomerModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.Models.CustomerModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.Models.CustomerModel), targetNullValue);
                }
                obj.Item = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(global::Windows.UI.Xaml.Controls.CalendarDatePicker obj, global::System.Nullable<global::System.DateTimeOffset> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.DateTimeOffset) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.DateTimeOffset), targetNullValue);
                }
                obj.Date = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CustomerDetails_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICustomerDetails_Bindings
        {
            private global::Inventory.ViewModels.CustomerDetailsViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj2;
            private global::Inventory.Controls.FormTextBox obj3;
            private global::Inventory.Controls.FormTextBox obj4;
            private global::Inventory.Controls.FormTextBox obj5;
            private global::Inventory.Controls.FormCalendarDatePicker obj6;
            private global::Inventory.Controls.FormComboBox obj7;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj8;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3TextDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6DateDisabled = false;
            private static bool isobj7ItemsSourceDisabled = false;
            private static bool isobj7SelectedValueDisabled = false;
            private static bool isobj8IsOnDisabled = false;
            private static bool isobj9IsOnDisabled = false;

            private CustomerDetails_obj2_BindingsTracking bindingsTracking;

            public CustomerDetails_obj2_Bindings()
            {
                this.bindingsTracking = new CustomerDetails_obj2_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 18 && columnNumber == 52)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 19 && columnNumber == 56)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 20 && columnNumber == 57)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 73)
                {
                    isobj6DateDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 69)
                {
                    isobj7ItemsSourceDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 41)
                {
                    isobj7SelectedValueDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 63)
                {
                    isobj8IsOnDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 63)
                {
                    isobj9IsOnDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Customer\Details\CustomerDetails.xaml line 16
                        this.obj2 = new global::System.WeakReference((global::Inventory.Controls.FluidGrid)target);
                        break;
                    case 3: // Views\Customer\Details\CustomerDetails.xaml line 18
                        this.obj3 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // Views\Customer\Details\CustomerDetails.xaml line 19
                        this.obj4 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\Customer\Details\CustomerDetails.xaml line 20
                        this.obj5 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\Customer\Details\CustomerDetails.xaml line 21
                        this.obj6 = (global::Inventory.Controls.FormCalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\Customer\Details\CustomerDetails.xaml line 25
                        this.obj7 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Views\Customer\Details\CustomerDetails.xaml line 28
                        this.obj8 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\Customer\Details\CustomerDetails.xaml line 35
                        this.obj9 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj2.Target as global::Inventory.Controls.FluidGrid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.ViewModels.CustomerDetailsViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ICustomerDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.ViewModels.CustomerDetailsViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.ViewModels.CustomerDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem(obj.EditableItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables(obj.LookupTables, phase);
                    }
                }
            }
            private void Update_EditableItem(global::Inventory.Models.CustomerModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_FirstName(obj.FirstName, phase);
                        this.Update_EditableItem_LastName(obj.LastName, phase);
                        this.Update_EditableItem_MiddleName(obj.MiddleName, phase);
                        this.Update_EditableItem_BirthDate(obj.BirthDate, phase);
                        this.Update_EditableItem_SourceId(obj.SourceId, phase);
                        this.Update_EditableItem_SignOfConsent(obj.SignOfConsent, phase);
                        this.Update_EditableItem_IsBlockList(obj.IsBlockList, phase);
                    }
                }
            }
            private void Update_EditableItem_FirstName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 18
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_EditableItem_LastName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 19
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_EditableItem_MiddleName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 20
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_EditableItem_BirthDate(global::System.Nullable<global::System.DateTimeOffset> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 21
                    if (!isobj6DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj6, obj, null);
                    }
                }
            }
            private void Update_LookupTables(global::Inventory.Services.ILookupTables obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables_OrderSources(obj.OrderSources, phase);
                    }
                }
            }
            private void Update_LookupTables_OrderSources(global::System.Collections.Generic.IList<global::Inventory.Models.SourceModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 25
                    if (!isobj7ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj7, obj, null);
                    }
                }
            }
            private void Update_EditableItem_SourceId(global::System.Nullable<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 25
                    if (!isobj7SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj7, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_SignOfConsent(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 28
                    if (!isobj8IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj8, (global::System.Boolean)this.LookupConverter("NullableBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_EditableItem_IsBlockList(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 35
                    if (!isobj9IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj9, (global::System.Boolean)this.LookupConverter("NullableBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void UpdateTwoWay_3_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.FirstName = this.obj3.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.LastName = this.obj4.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.MiddleName = this.obj5.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.BirthDate = this.obj6.Date;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.SourceId = (global::System.Nullable<global::System.Int32>)this.LookupConverter("Int32Converter").ConvertBack(this.obj7.SelectedValue, typeof(global::System.Nullable<global::System.Int32>), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.SignOfConsent = (global::System.Boolean)this.LookupConverter("NullableBoolConverter").ConvertBack(this.obj8.IsOn, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.IsBlockList = (global::System.Boolean)this.LookupConverter("NullableBoolConverter").ConvertBack(this.obj9.IsOn, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class CustomerDetails_obj2_BindingsTracking
            {
                private global::System.WeakReference<CustomerDetails_obj2_Bindings> weakRefToBindingObj; 

                public CustomerDetails_obj2_BindingsTracking(CustomerDetails_obj2_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<CustomerDetails_obj2_Bindings>(obj);
                }

                public CustomerDetails_obj2_Bindings TryGetBindingObject()
                {
                    CustomerDetails_obj2_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_EditableItem(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomerDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.CustomerDetailsViewModel obj = sender as global::Inventory.ViewModels.CustomerDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.ViewModels.CustomerDetailsViewModel obj)
                {
                    CustomerDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomerDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.CustomerModel obj = sender as global::Inventory.Models.CustomerModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_FirstName(obj.FirstName, DATA_CHANGED);
                                bindings.Update_EditableItem_LastName(obj.LastName, DATA_CHANGED);
                                bindings.Update_EditableItem_MiddleName(obj.MiddleName, DATA_CHANGED);
                                bindings.Update_EditableItem_BirthDate(obj.BirthDate, DATA_CHANGED);
                                bindings.Update_EditableItem_SourceId(obj.SourceId, DATA_CHANGED);
                                bindings.Update_EditableItem_SignOfConsent(obj.SignOfConsent, DATA_CHANGED);
                                bindings.Update_EditableItem_IsBlockList(obj.IsBlockList, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "FirstName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_FirstName(obj.FirstName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LastName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_LastName(obj.LastName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MiddleName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_MiddleName(obj.MiddleName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "BirthDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_BirthDate(obj.BirthDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SourceId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_SourceId(obj.SourceId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SignOfConsent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_SignOfConsent(obj.SignOfConsent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsBlockList":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_IsBlockList(obj.IsBlockList, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.CustomerModel cache_EditableItem = null;
                public void UpdateChildListeners_EditableItem(global::Inventory.Models.CustomerModel obj)
                {
                    if (obj != cache_EditableItem)
                    {
                        if (cache_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem).PropertyChanged -= PropertyChanged_EditableItem;
                            cache_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_4(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_5(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_6(global::Inventory.Controls.FormCalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_IsOn();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CustomerDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICustomerDetails_Bindings
        {
            private global::Inventory.Views.CustomerDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Inventory.Controls.Details obj10;
            private global::Windows.UI.Xaml.Controls.Border obj11;
            private global::Inventory.Views.CustomerAddressList obj12;
            private global::Inventory.Views.CommunicationList obj13;
            private global::Inventory.Views.CustomerCard obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj10RowSpanDisabled = false;
            private static bool isobj10DetailsContentDisabled = false;
            private static bool isobj10CanGoBackDisabled = false;
            private static bool isobj10IsEditModeDisabled = false;
            private static bool isobj10BackCommandDisabled = false;
            private static bool isobj10EditCommandDisabled = false;
            private static bool isobj10DeleteCommandDisabled = false;
            private static bool isobj10SaveCommandDisabled = false;
            private static bool isobj10CancelCommandDisabled = false;
            private static bool isobj11VisibilityDisabled = false;
            private static bool isobj12ViewModelDisabled = false;
            private static bool isobj13ViewModelDisabled = false;
            private static bool isobj14ViewModelDisabled = false;
            private static bool isobj14ItemDisabled = false;

            private CustomerDetails_obj1_BindingsTracking bindingsTracking;

            public CustomerDetails_obj1_Bindings()
            {
                this.bindingsTracking = new CustomerDetails_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 62 && columnNumber == 75)
                {
                    isobj10RowSpanDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 27)
                {
                    isobj10DetailsContentDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 27)
                {
                    isobj10CanGoBackDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 27)
                {
                    isobj10IsEditModeDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 27)
                {
                    isobj10BackCommandDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 27)
                {
                    isobj10EditCommandDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 27)
                {
                    isobj10DeleteCommandDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 27)
                {
                    isobj10SaveCommandDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 27)
                {
                    isobj10CancelCommandDisabled = true;
                }
                else if (lineNumber == 74 && columnNumber == 84)
                {
                    isobj11VisibilityDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 56)
                {
                    isobj12ViewModelDisabled = true;
                }
                else if (lineNumber == 78 && columnNumber == 54)
                {
                    isobj13ViewModelDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 48)
                {
                    isobj14ViewModelDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 79)
                {
                    isobj14ItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10: // Views\Customer\Details\CustomerDetails.xaml line 62
                        this.obj10 = (global::Inventory.Controls.Details)target;
                        break;
                    case 11: // Views\Customer\Details\CustomerDetails.xaml line 74
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 12: // Views\Customer\Details\CustomerDetails.xaml line 81
                        this.obj12 = (global::Inventory.Views.CustomerAddressList)target;
                        break;
                    case 13: // Views\Customer\Details\CustomerDetails.xaml line 78
                        this.obj13 = (global::Inventory.Views.CommunicationList)target;
                        break;
                    case 14: // Views\Customer\Details\CustomerDetails.xaml line 53
                        this.obj14 = (global::Inventory.Views.CustomerCard)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // ICustomerDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.CustomerDetails)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            private bool TryGet_ViewModel_ItemIsNew(out global::System.Boolean val)
            {
                global::Inventory.ViewModels.CustomerDetailsViewModel obj;
                if (TryGet_ViewModel(out obj) && obj != null)
                {
                    val = obj.ItemIsNew;
                    return true;
                }
                else
                {
                    val = default(global::System.Boolean);
                    return false;
                }
            }

            private bool TryGet_ViewModel(out global::Inventory.ViewModels.CustomerDetailsViewModel val)
            {
                global::Inventory.Views.CustomerDetails obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.ViewModel;
                    return true;
                }
                else
                {
                    val = default(global::Inventory.ViewModels.CustomerDetailsViewModel);
                    return false;
                }
            }

            private bool TryGet_(out global::Inventory.Views.CustomerDetails val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_M_GetRowSpan_3217827704(int phase)
            {
                global::System.Boolean p0;
                if (!TryGet_ViewModel_ItemIsNew(out p0)) { return; }
                global::System.Int32 result = this.dataRoot.GetRowSpan(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10RowSpanDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_RowSpan(this.obj10, result);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                foreach(var function in this.PendingFunctionBindings)
                {
                    function.Value.Invoke(phase);
                }
                this.PendingFunctionBindings.Clear();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.CustomerDetails obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                        this.Update_M_GetRowSpan_3217827704(phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_ViewModel(global::Inventory.ViewModels.CustomerDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ItemIsNew(obj.ItemIsNew, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CanGoBack(obj.CanGoBack, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEditMode(obj.IsEditMode, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_BackCommand(obj.BackCommand, phase);
                        this.Update_ViewModel_EditCommand(obj.EditCommand, phase);
                        this.Update_ViewModel_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_ViewModel_SaveCommand(obj.SaveCommand, phase);
                        this.Update_ViewModel_CancelCommand(obj.CancelCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditableItem(obj.EditableItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AddressList(obj.AddressList, phase);
                        this.Update_ViewModel_CommunicationList(obj.CommunicationList, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item(obj.Item, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10DetailsContentDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DetailsContent(this.obj10, obj, null);
                    }
                    // Views\Customer\Details\CustomerDetails.xaml line 53
                    if (!isobj14ViewModelDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_CustomerCard_ViewModel(this.obj14, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ItemIsNew(global::System.Boolean obj, int phase)
            {
                this.Update_M_GetRowSpan_3217827704(phase);
            }
            private void Update_M_GetRowSpan_3217827704(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj10RowSpanDisabled)
                    {
                        this.PendingFunctionBindings["M_GetRowSpan_3217827704"] = new InvokeFunctionDelegate(this.Invoke_M_GetRowSpan_3217827704); 
                    }
                }
            }
            private void Update_ViewModel_CanGoBack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10CanGoBackDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CanGoBack(this.obj10, obj);
                    }
                }
            }
            private void Update_ViewModel_IsEditMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10IsEditModeDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_IsEditMode(this.obj10, obj);
                    }
                }
            }
            private void Update_ViewModel_BackCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10BackCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_BackCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EditCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10EditCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_EditCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DeleteCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10SaveCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_SaveCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 62
                    if (!isobj10CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CancelCommand(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EditableItem(global::Inventory.Models.CustomerModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_EditableItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditableItem_IsNew(obj.IsNew, phase);
                    }
                }
            }
            private void Update_ViewModel_EditableItem_IsNew(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 74
                    if (!isobj11VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("InverseBoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_AddressList(global::Inventory.ViewModels.CustomerAddressListViewModel obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 81
                    if (!isobj12ViewModelDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_CustomerAddressList_ViewModel(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CommunicationList(global::Inventory.ViewModels.CommunicationListViewModel obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 78
                    if (!isobj13ViewModelDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_CommunicationList_ViewModel(this.obj13, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item(global::Inventory.Models.CustomerModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Item(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Customer\Details\CustomerDetails.xaml line 53
                    if (!isobj14ItemDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_CustomerCard_Item(this.obj14, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class CustomerDetails_obj1_BindingsTracking
            {
                private global::System.WeakReference<CustomerDetails_obj1_Bindings> weakRefToBindingObj; 

                public CustomerDetails_obj1_BindingsTracking(CustomerDetails_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<CustomerDetails_obj1_Bindings>(obj);
                }

                public CustomerDetails_obj1_Bindings TryGetBindingObject()
                {
                    CustomerDetails_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_EditableItem(null);
                    UpdateChildListeners_ViewModel_Item(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CustomerDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.CustomerDetails obj = sender as global::Inventory.Views.CustomerDetails;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.CustomerDetails obj)
                {
                    CustomerDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.CustomerDetails.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.CustomerDetails.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomerDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.CustomerDetailsViewModel obj = sender as global::Inventory.ViewModels.CustomerDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_ItemIsNew(obj.ItemIsNew, DATA_CHANGED);
                                bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                bindings.Update_ViewModel_EditableItem(obj.EditableItem, DATA_CHANGED);
                                bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ItemIsNew":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ItemIsNew(obj.ItemIsNew, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsEditMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Inventory.ViewModels.CustomerDetailsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.CustomerDetailsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomerDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.CustomerModel obj = sender as global::Inventory.Models.CustomerModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_EditableItem_IsNew(obj.IsNew, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsNew":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EditableItem_IsNew(obj.IsNew, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Inventory.Models.CustomerModel cache_ViewModel_EditableItem = null;
                public void UpdateChildListeners_ViewModel_EditableItem(global::Inventory.Models.CustomerModel obj)
                {
                    if (obj != cache_ViewModel_EditableItem)
                    {
                        if (cache_ViewModel_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_EditableItem).PropertyChanged -= PropertyChanged_ViewModel_EditableItem;
                            cache_ViewModel_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_EditableItem;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomerDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.CustomerModel obj = sender as global::Inventory.Models.CustomerModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Inventory.Models.CustomerModel cache_ViewModel_Item = null;
                public void UpdateChildListeners_ViewModel_Item(global::Inventory.Models.CustomerModel obj)
                {
                    if (obj != cache_ViewModel_Item)
                    {
                        if (cache_ViewModel_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Item).PropertyChanged -= PropertyChanged_ViewModel_Item;
                            cache_ViewModel_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Item;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 8: // Views\Customer\Details\CustomerDetails.xaml line 28
                {
                    global::Windows.UI.Xaml.Controls.ToggleSwitch element8 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                    ((global::Windows.UI.Xaml.Controls.ToggleSwitch)element8).PointerReleased += this.ToggleSwitch_PointerReleased;
                }
                break;
            case 9: // Views\Customer\Details\CustomerDetails.xaml line 35
                {
                    global::Windows.UI.Xaml.Controls.ToggleSwitch element9 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                    ((global::Windows.UI.Xaml.Controls.ToggleSwitch)element9).PointerReleased += this.ToggleSwitch_PointerReleased;
                }
                break;
            case 10: // Views\Customer\Details\CustomerDetails.xaml line 62
                {
                    this.details = (global::Inventory.Controls.Details)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Customer\Details\CustomerDetails.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    CustomerDetails_obj1_Bindings bindings = new CustomerDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 2: // Views\Customer\Details\CustomerDetails.xaml line 16
                {                    
                    global::Inventory.Controls.FluidGrid element2 = (global::Inventory.Controls.FluidGrid)target;
                    CustomerDetails_obj2_Bindings bindings = new CustomerDetails_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element2.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element2, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


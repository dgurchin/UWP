#pragma checksum "D:\Delivery\src\Inventory.App\Views\Orders\Details\OrdersDetails.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "397C50DFC73D26E5765004742B17FE48"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class OrdersDetails : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_Details_DetailsContent(global::Inventory.Controls.Details obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DetailsContent = value;
            }
            public static void Set_Inventory_Views_OrdersCard_Item(global::Inventory.Views.OrdersCard obj, global::Inventory.Models.OrderModel value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Inventory.Models.OrderModel) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Inventory.Models.OrderModel), targetNullValue);
                }
                obj.Item = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Inventory_Controls_Details_IsEditMode(global::Inventory.Controls.Details obj, global::System.Boolean value)
            {
                obj.IsEditMode = value;
            }
            public static void Set_Inventory_Controls_Details_EditCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EditCommand = value;
            }
            public static void Set_Inventory_Controls_Details_DeleteCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Inventory_Controls_Details_SaveCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SaveCommand = value;
            }
            public static void Set_Inventory_Controls_Details_CancelCommand(global::Inventory.Controls.Details obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Inventory_Controls_StreetSuggestBox_CityQuery(global::Inventory.Controls.StreetSuggestBox obj, global::System.Int32 value)
            {
                obj.CityQuery = value;
            }
            public static void Set_Inventory_Controls_StreetSuggestBox_DisplayText(global::Inventory.Controls.StreetSuggestBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.DisplayText = value ?? global::System.String.Empty;
            }
            public static void Set_Inventory_Controls_StreetSuggestBox_StreetSelectedCommand(global::Inventory.Controls.StreetSuggestBox obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.StreetSelectedCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(global::Windows.UI.Xaml.Controls.CalendarDatePicker obj, global::System.Nullable<global::System.DateTimeOffset> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.DateTimeOffset) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.DateTimeOffset), targetNullValue);
                }
                obj.Date = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_CalendarDatePicker_MinDate(global::Windows.UI.Xaml.Controls.CalendarDatePicker obj, global::System.DateTimeOffset value)
            {
                obj.MinDate = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TimePicker_Time(global::Windows.UI.Xaml.Controls.TimePicker obj, global::System.TimeSpan value)
            {
                obj.Time = value;
            }
            public static void Set_Inventory_Controls_FormTextBox_IsRequired(global::Inventory.Controls.FormTextBox obj, global::System.Boolean value)
            {
                obj.IsRequired = value;
            }
            public static void Set_Inventory_Controls_CustomerSuggestBox_PhoneQuery(global::Inventory.Controls.CustomerSuggestBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PhoneQuery = value ?? global::System.String.Empty;
            }
            public static void Set_Inventory_Controls_CustomerSuggestBox_DisplayText(global::Inventory.Controls.CustomerSuggestBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.DisplayText = value ?? global::System.String.Empty;
            }
            public static void Set_Inventory_Controls_CustomerSuggestBox_CustomerSelectedCommand(global::Inventory.Controls.CustomerSuggestBox obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CustomerSelectedCommand = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersDetails_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersDetails_Bindings
        {
            private global::Inventory.ViewModels.OrderDetailsViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj2;
            private global::Inventory.Controls.FluidGrid obj3;
            private global::Inventory.Controls.FluidGrid obj4;
            private global::Inventory.Controls.FormTextBox obj5;
            private global::Inventory.Controls.FormTextBox obj6;
            private global::Inventory.Controls.FormTextBox obj7;
            private global::Inventory.Controls.FormComboBox obj8;
            private global::Inventory.Controls.StreetSuggestBox obj9;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj10;
            private global::Inventory.Controls.FormTextBox obj11;
            private global::Inventory.Controls.FormTextBox obj12;
            private global::Inventory.Controls.FormTextBox obj13;
            private global::Inventory.Controls.FormTextBox obj14;
            private global::Inventory.Controls.FormTextBox obj15;
            private global::Inventory.Controls.FormTextBox obj16;
            private global::Inventory.Controls.FormComboBox obj17;
            private global::Inventory.Controls.FormCalendarDatePicker obj18;
            private global::Inventory.Controls.FormTimePicker obj19;
            private global::Inventory.Controls.FormComboBox obj20;
            private global::Inventory.Controls.FormComboBox obj21;
            private global::Inventory.Controls.FormComboBox obj22;
            private global::Inventory.Controls.FormTextBox obj23;
            private global::Inventory.Controls.FormComboBox obj24;
            private global::Inventory.Controls.FormTextBox obj25;
            private global::Inventory.Controls.FormComboBox obj26;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj27;
            private global::Inventory.Controls.FormTextBox obj28;
            private global::Inventory.Controls.FormTextBox obj29;
            private global::Inventory.Controls.CustomerSuggestBox obj30;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj7VisibilityDisabled = false;
            private static bool isobj8ItemsSourceDisabled = false;
            private static bool isobj8SelectedValueDisabled = false;
            private static bool isobj9DisplayTextDisabled = false;
            private static bool isobj9CityQueryDisabled = false;
            private static bool isobj9StreetSelectedCommandDisabled = false;
            private static bool isobj10IsOnDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15TextDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj17ItemsSourceDisabled = false;
            private static bool isobj17SelectedValueDisabled = false;
            private static bool isobj18DateDisabled = false;
            private static bool isobj18MinDateDisabled = false;
            private static bool isobj18IsEnabledDisabled = false;
            private static bool isobj19TimeDisabled = false;
            private static bool isobj19IsEnabledDisabled = false;
            private static bool isobj20ItemsSourceDisabled = false;
            private static bool isobj20SelectedValueDisabled = false;
            private static bool isobj20IsEnabledDisabled = false;
            private static bool isobj21ItemsSourceDisabled = false;
            private static bool isobj21SelectedValueDisabled = false;
            private static bool isobj22ItemsSourceDisabled = false;
            private static bool isobj22SelectedValueDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj23VisibilityDisabled = false;
            private static bool isobj24ItemsSourceDisabled = false;
            private static bool isobj24SelectedValueDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj26ItemsSourceDisabled = false;
            private static bool isobj26SelectedValueDisabled = false;
            private static bool isobj27IsOnDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj28IsRequiredDisabled = false;
            private static bool isobj28VisibilityDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj29VisibilityDisabled = false;
            private static bool isobj30DisplayTextDisabled = false;
            private static bool isobj30CustomerSelectedCommandDisabled = false;
            private static bool isobj30PhoneQueryDisabled = false;
            private static bool isobj30VisibilityDisabled = false;

            private OrdersDetails_obj2_BindingsTracking bindingsTracking;

            public OrdersDetails_obj2_Bindings()
            {
                this.bindingsTracking = new OrdersDetails_obj2_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 21 && columnNumber == 37)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 37)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 77)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 80)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 77)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 120 && columnNumber == 47)
                {
                    isobj7VisibilityDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 59)
                {
                    isobj8ItemsSourceDisabled = true;
                }
                else if (lineNumber == 87 && columnNumber == 40)
                {
                    isobj8SelectedValueDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 48)
                {
                    isobj9DisplayTextDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 44)
                {
                    isobj9CityQueryDisabled = true;
                }
                else if (lineNumber == 92 && columnNumber == 44)
                {
                    isobj9StreetSelectedCommandDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 67)
                {
                    isobj10IsOnDisabled = true;
                }
                else if (lineNumber == 99 && columnNumber == 64)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 100 && columnNumber == 61)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 101 && columnNumber == 64)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 102 && columnNumber == 63)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 95 && columnNumber == 63)
                {
                    isobj15TextDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 70)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 66)
                {
                    isobj17ItemsSourceDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 41)
                {
                    isobj17SelectedValueDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 77)
                {
                    isobj18DateDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 50)
                {
                    isobj18MinDateDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 50)
                {
                    isobj18IsEnabledDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 70)
                {
                    isobj19TimeDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 42)
                {
                    isobj19IsEnabledDisabled = true;
                }
                else if (lineNumber == 76 && columnNumber == 76)
                {
                    isobj20ItemsSourceDisabled = true;
                }
                else if (lineNumber == 77 && columnNumber == 41)
                {
                    isobj20SelectedValueDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 41)
                {
                    isobj20IsEnabledDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 64)
                {
                    isobj21ItemsSourceDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 41)
                {
                    isobj21SelectedValueDisabled = true;
                }
                else if (lineNumber == 39 && columnNumber == 64)
                {
                    isobj22ItemsSourceDisabled = true;
                }
                else if (lineNumber == 40 && columnNumber == 37)
                {
                    isobj22SelectedValueDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 79)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 173)
                {
                    isobj23VisibilityDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 60)
                {
                    isobj24ItemsSourceDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 40)
                {
                    isobj24SelectedValueDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 70)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 73)
                {
                    isobj26ItemsSourceDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 44)
                {
                    isobj26SelectedValueDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 67)
                {
                    isobj27IsOnDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 70)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 43)
                {
                    isobj28IsRequiredDisabled = true;
                }
                else if (lineNumber == 58 && columnNumber == 43)
                {
                    isobj28VisibilityDisabled = true;
                }
                else if (lineNumber == 23 && columnNumber == 60)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 39)
                {
                    isobj29VisibilityDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 50)
                {
                    isobj30DisplayTextDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 46)
                {
                    isobj30CustomerSelectedCommandDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 46)
                {
                    isobj30PhoneQueryDisabled = true;
                }
                else if (lineNumber == 29 && columnNumber == 46)
                {
                    isobj30VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Orders\Details\OrdersDetails.xaml line 16
                        this.obj2 = new global::System.WeakReference((global::Inventory.Controls.FluidGrid)target);
                        break;
                    case 3: // Views\Orders\Details\OrdersDetails.xaml line 20
                        this.obj3 = (global::Inventory.Controls.FluidGrid)target;
                        break;
                    case 4: // Views\Orders\Details\OrdersDetails.xaml line 83
                        this.obj4 = (global::Inventory.Controls.FluidGrid)target;
                        break;
                    case 5: // Views\Orders\Details\OrdersDetails.xaml line 117
                        this.obj5 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\Orders\Details\OrdersDetails.xaml line 118
                        this.obj6 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\Orders\Details\OrdersDetails.xaml line 119
                        this.obj7 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Views\Orders\Details\OrdersDetails.xaml line 86
                        this.obj8 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\Orders\Details\OrdersDetails.xaml line 90
                        this.obj9 = (global::Inventory.Controls.StreetSuggestBox)target;
                        break;
                    case 10: // Views\Orders\Details\OrdersDetails.xaml line 105
                        this.obj10 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\Orders\Details\OrdersDetails.xaml line 99
                        this.obj11 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\Orders\Details\OrdersDetails.xaml line 100
                        this.obj12 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\Orders\Details\OrdersDetails.xaml line 101
                        this.obj13 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Views\Orders\Details\OrdersDetails.xaml line 102
                        this.obj14 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 15: // Views\Orders\Details\OrdersDetails.xaml line 95
                        this.obj15 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Views\Orders\Details\OrdersDetails.xaml line 96
                        this.obj16 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Views\Orders\Details\OrdersDetails.xaml line 64
                        this.obj17 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Views\Orders\Details\OrdersDetails.xaml line 68
                        this.obj18 = (global::Inventory.Controls.FormCalendarDatePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Views\Orders\Details\OrdersDetails.xaml line 71
                        this.obj19 = (global::Inventory.Controls.FormTimePicker)target;
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 20: // Views\Orders\Details\OrdersDetails.xaml line 76
                        this.obj20 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_20(this.obj20);
                        break;
                    case 21: // Views\Orders\Details\OrdersDetails.xaml line 36
                        this.obj21 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_21(this.obj21);
                        break;
                    case 22: // Views\Orders\Details\OrdersDetails.xaml line 39
                        this.obj22 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_22(this.obj22);
                        break;
                    case 23: // Views\Orders\Details\OrdersDetails.xaml line 42
                        this.obj23 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 24: // Views\Orders\Details\OrdersDetails.xaml line 43
                        this.obj24 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    case 25: // Views\Orders\Details\OrdersDetails.xaml line 46
                        this.obj25 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_25(this.obj25);
                        break;
                    case 26: // Views\Orders\Details\OrdersDetails.xaml line 47
                        this.obj26 = (global::Inventory.Controls.FormComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_26(this.obj26);
                        break;
                    case 27: // Views\Orders\Details\OrdersDetails.xaml line 50
                        this.obj27 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 28: // Views\Orders\Details\OrdersDetails.xaml line 56
                        this.obj28 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 29: // Views\Orders\Details\OrdersDetails.xaml line 23
                        this.obj29 = (global::Inventory.Controls.FormTextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_29(this.obj29);
                        break;
                    case 30: // Views\Orders\Details\OrdersDetails.xaml line 26
                        this.obj30 = (global::Inventory.Controls.CustomerSuggestBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_30(this.obj30);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj2.Target as global::Inventory.Controls.FluidGrid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.ViewModels.OrderDetailsViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IOrdersDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.ViewModels.OrderDetailsViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.ViewModels.OrderDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CanEditPhone(obj.CanEditPhone, phase);
                        this.Update_EditableItem(obj.EditableItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables(obj.LookupTables, phase);
                        this.Update_StreetSelectedCommand(obj.StreetSelectedCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_OrderStatuses(obj.OrderStatuses, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_CustomerSelectedCommand(obj.CustomerSelectedCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CanEditCustomer(obj.CanEditCustomer, phase);
                    }
                }
            }
            private void Update_CanEditPhone(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 20
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 23
                    if (!isobj29VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj29, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_EditableItem(global::Inventory.Models.OrderModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_IsAddressRequired(obj.IsAddressRequired, phase);
                        this.Update_EditableItem_Comment(obj.Comment, phase);
                        this.Update_EditableItem_CommentCustomer(obj.CommentCustomer, phase);
                        this.Update_EditableItem_CommentAddress(obj.CommentAddress, phase);
                        this.Update_EditableItem_CityId(obj.CityId, phase);
                        this.Update_EditableItem_Street(obj.Street, phase);
                        this.Update_EditableItem_CallOnArrival(obj.CallOnArrival, phase);
                        this.Update_EditableItem_Intercom(obj.Intercom, phase);
                        this.Update_EditableItem_Floor(obj.Floor, phase);
                        this.Update_EditableItem_Entrance(obj.Entrance, phase);
                        this.Update_EditableItem_Housing(obj.Housing, phase);
                        this.Update_EditableItem_House(obj.House, phase);
                        this.Update_EditableItem_Apartment(obj.Apartment, phase);
                        this.Update_EditableItem_DeliveryTypeId(obj.DeliveryTypeId, phase);
                        this.Update_EditableItem_DeliveryDate(obj.DeliveryDate, phase);
                        this.Update_EditableItem_CreatedOn(obj.CreatedOn, phase);
                        this.Update_EditableItem_IsDeliveryDateReadOnly(obj.IsDeliveryDateReadOnly, phase);
                        this.Update_EditableItem_DeliveryTime(obj.DeliveryTime, phase);
                        this.Update_EditableItem_RestaurantId(obj.RestaurantId, phase);
                        this.Update_EditableItem_CanEditRestaurant(obj.CanEditRestaurant, phase);
                        this.Update_EditableItem_OrderTypeId(obj.OrderTypeId, phase);
                        this.Update_EditableItem_PaymentTypeId(obj.PaymentTypeId, phase);
                        this.Update_EditableItem_Change(obj.Change, phase);
                        this.Update_EditableItem_IsChangeVisible(obj.IsChangeVisible, phase);
                        this.Update_EditableItem_StatusId(obj.StatusId, phase);
                        this.Update_EditableItem_NumOfPeople(obj.NumOfPeople, phase);
                        this.Update_EditableItem_SourceId(obj.SourceId, phase);
                        this.Update_EditableItem_IsConfirmation(obj.IsConfirmation, phase);
                        this.Update_EditableItem_Reason(obj.Reason, phase);
                        this.Update_EditableItem_IsReasonVisible(obj.IsReasonVisible, phase);
                        this.Update_EditableItem_PhoneNumber(obj.PhoneNumber, phase);
                        this.Update_EditableItem_EditableCustomerName(obj.EditableCustomerName, phase);
                    }
                }
            }
            private void Update_EditableItem_IsAddressRequired(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 83
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 119
                    if (!isobj7VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_EditableItem_Comment(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 117
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_EditableItem_CommentCustomer(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 118
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, obj, null);
                    }
                }
            }
            private void Update_EditableItem_CommentAddress(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 119
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_LookupTables(global::Inventory.Services.ILookupTables obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LookupTables_Cities(obj.Cities, phase);
                        this.Update_LookupTables_DeliveryTypes(obj.DeliveryTypes, phase);
                        this.Update_LookupTables_Restaurants(obj.Restaurants, phase);
                        this.Update_LookupTables_OrderTypes(obj.OrderTypes, phase);
                        this.Update_LookupTables_PaymentTypes(obj.PaymentTypes, phase);
                        this.Update_LookupTables_OrderSources(obj.OrderSources, phase);
                    }
                }
            }
            private void Update_LookupTables_Cities(global::System.Collections.Generic.IList<global::Inventory.Models.CityModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 86
                    if (!isobj8ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj8, obj, null);
                    }
                }
            }
            private void Update_EditableItem_CityId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 86
                    if (!isobj8SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj8, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 90
                    if (!isobj9CityQueryDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_StreetSuggestBox_CityQuery(this.obj9, obj);
                    }
                }
            }
            private void Update_EditableItem_Street(global::Inventory.Models.StreetModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_EditableItem_Street(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_EditableItem_Street_DisplayName(obj.DisplayName, phase);
                    }
                }
            }
            private void Update_EditableItem_Street_DisplayName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 90
                    if (!isobj9DisplayTextDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_StreetSuggestBox_DisplayText(this.obj9, obj, null);
                    }
                }
            }
            private void Update_StreetSelectedCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 90
                    if (!isobj9StreetSelectedCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_StreetSuggestBox_StreetSelectedCommand(this.obj9, obj, null);
                    }
                }
            }
            private void Update_EditableItem_CallOnArrival(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 105
                    if (!isobj10IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj10, (global::System.Boolean)this.LookupConverter("NullableBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_EditableItem_Intercom(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 99
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_EditableItem_Floor(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 100
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_EditableItem_Entrance(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 101
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_EditableItem_Housing(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 102
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_EditableItem_House(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 95
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj15, obj, null);
                    }
                }
            }
            private void Update_EditableItem_Apartment(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 96
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_LookupTables_DeliveryTypes(global::System.Collections.Generic.IList<global::Inventory.Models.DeliveryTypeModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 64
                    if (!isobj17ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj17, obj, null);
                    }
                }
            }
            private void Update_EditableItem_DeliveryTypeId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 64
                    if (!isobj17SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj17, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_DeliveryDate(global::System.Nullable<global::System.DateTimeOffset> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 68
                    if (!isobj18DateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_Date(this.obj18, obj, null);
                    }
                }
            }
            private void Update_EditableItem_CreatedOn(global::System.DateTimeOffset obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 68
                    if (!isobj18MinDateDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_CalendarDatePicker_MinDate(this.obj18, (global::System.DateTimeOffset)this.LookupConverter("DateTimeOffsetConverter").Convert(obj, typeof(global::System.DateTimeOffset), null, null));
                    }
                }
            }
            private void Update_EditableItem_IsDeliveryDateReadOnly(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 68
                    if (!isobj18IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj18, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 71
                    if (!isobj19IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj19, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_EditableItem_DeliveryTime(global::System.TimeSpan obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 71
                    if (!isobj19TimeDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TimePicker_Time(this.obj19, obj);
                    }
                }
            }
            private void Update_LookupTables_Restaurants(global::System.Collections.Generic.IList<global::Inventory.Models.RestaurantModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 76
                    if (!isobj20ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj20, obj, null);
                    }
                }
            }
            private void Update_EditableItem_RestaurantId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 76
                    if (!isobj20SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj20, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_CanEditRestaurant(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 76
                    if (!isobj20IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj20, obj);
                    }
                }
            }
            private void Update_LookupTables_OrderTypes(global::System.Collections.Generic.IList<global::Inventory.Models.OrderTypeModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 36
                    if (!isobj21ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj21, obj, null);
                    }
                }
            }
            private void Update_EditableItem_OrderTypeId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 36
                    if (!isobj21SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj21, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_LookupTables_PaymentTypes(global::System.Collections.Generic.IList<global::Inventory.Models.PaymentTypeModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 39
                    if (!isobj22ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj22, obj, null);
                    }
                }
            }
            private void Update_EditableItem_PaymentTypeId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 39
                    if (!isobj22SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj22, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_Change(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 42
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj23, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_IsChangeVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 42
                    if (!isobj23VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj23, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_OrderStatuses(global::System.Collections.Generic.IList<global::Inventory.Models.OrderStatusModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 43
                    if (!isobj24ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj24, obj, null);
                    }
                }
            }
            private void Update_EditableItem_StatusId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 43
                    if (!isobj24SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj24, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_NumOfPeople(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 46
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj25, (global::System.String)this.LookupConverter("BindingTypeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_LookupTables_OrderSources(global::System.Collections.Generic.IList<global::Inventory.Models.SourceModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 47
                    if (!isobj26ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj26, obj, null);
                    }
                }
            }
            private void Update_EditableItem_SourceId(global::System.Nullable<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 47
                    if (!isobj26SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj26, (global::System.Object)this.LookupConverter("Int32Converter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_EditableItem_IsConfirmation(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 50
                    if (!isobj27IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj27, (global::System.Boolean)this.LookupConverter("NullableBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_EditableItem_Reason(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 56
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj28, obj, null);
                    }
                }
            }
            private void Update_EditableItem_IsReasonVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 56
                    if (!isobj28IsRequiredDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_FormTextBox_IsRequired(this.obj28, obj);
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 56
                    if (!isobj28VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj28, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_EditableItem_PhoneNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 23
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj29, obj, null);
                    }
                    // Views\Orders\Details\OrdersDetails.xaml line 26
                    if (!isobj30PhoneQueryDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_CustomerSuggestBox_PhoneQuery(this.obj30, obj, null);
                    }
                }
            }
            private void Update_EditableItem_EditableCustomerName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 26
                    if (!isobj30DisplayTextDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_CustomerSuggestBox_DisplayText(this.obj30, obj, null);
                    }
                }
            }
            private void Update_CustomerSelectedCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 26
                    if (!isobj30CustomerSelectedCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_CustomerSuggestBox_CustomerSelectedCommand(this.obj30, obj, null);
                    }
                }
            }
            private void Update_CanEditCustomer(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 26
                    if (!isobj30VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj30, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Comment = this.obj5.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.CommentCustomer = this.obj6.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.CommentAddress = this.obj7.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.CityId = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj8.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.CallOnArrival = (global::System.Boolean)this.LookupConverter("NullableBoolConverter").ConvertBack(this.obj10.IsOn, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Intercom = this.obj11.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Floor = this.obj12.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Entrance = this.obj13.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Housing = this.obj14.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_15_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.House = this.obj15.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Apartment = this.obj16.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.DeliveryTypeId = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj17.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_Date()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.DeliveryDate = this.obj18.Date;
                        }
                    }
                }
            }
            private void UpdateTwoWay_19_Time()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.DeliveryTime = this.obj19.Time;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.RestaurantId = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj20.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_21_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.OrderTypeId = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj21.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_22_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.PaymentTypeId = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj22.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_23_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Change = (global::System.Decimal)this.LookupConverter("DecimalConverter").ConvertBack(this.obj23.Text, typeof(global::System.Decimal), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_24_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.StatusId = (global::System.Int32)this.LookupConverter("Int32Converter").ConvertBack(this.obj24.SelectedValue, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_25_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.NumOfPeople = (global::System.Int32)this.LookupConverter("BindingTypeConverter").ConvertBack(this.obj25.Text, typeof(global::System.Int32), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_26_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.SourceId = (global::System.Nullable<global::System.Int32>)this.LookupConverter("Int32Converter").ConvertBack(this.obj26.SelectedValue, typeof(global::System.Nullable<global::System.Int32>), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_27_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.IsConfirmation = (global::System.Boolean)this.LookupConverter("NullableBoolConverter").ConvertBack(this.obj27.IsOn, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_28_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.Reason = this.obj28.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_29_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.PhoneNumber = this.obj29.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_30_DisplayText()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.EditableItem != null)
                        {
                            this.dataRoot.EditableItem.EditableCustomerName = this.obj30.DisplayText;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersDetails_obj2_BindingsTracking
            {
                private global::System.WeakReference<OrdersDetails_obj2_Bindings> weakRefToBindingObj; 

                public OrdersDetails_obj2_BindingsTracking(OrdersDetails_obj2_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersDetails_obj2_Bindings>(obj);
                }

                public OrdersDetails_obj2_Bindings TryGetBindingObject()
                {
                    OrdersDetails_obj2_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_EditableItem(null);
                    UpdateChildListeners_EditableItem_Street(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_CanEditPhone(obj.CanEditPhone, DATA_CHANGED);
                                bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                bindings.Update_OrderStatuses(obj.OrderStatuses, DATA_CHANGED);
                                bindings.Update_CanEditCustomer(obj.CanEditCustomer, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CanEditPhone":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CanEditPhone(obj.CanEditPhone, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EditableItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem(obj.EditableItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OrderStatuses":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_OrderStatuses(obj.OrderStatuses, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanEditCustomer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CanEditCustomer(obj.CanEditCustomer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.ViewModels.OrderDetailsViewModel obj)
                {
                    OrdersDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_EditableItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderModel obj = sender as global::Inventory.Models.OrderModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_IsAddressRequired(obj.IsAddressRequired, DATA_CHANGED);
                                bindings.Update_EditableItem_Comment(obj.Comment, DATA_CHANGED);
                                bindings.Update_EditableItem_CommentCustomer(obj.CommentCustomer, DATA_CHANGED);
                                bindings.Update_EditableItem_CommentAddress(obj.CommentAddress, DATA_CHANGED);
                                bindings.Update_EditableItem_CityId(obj.CityId, DATA_CHANGED);
                                bindings.Update_EditableItem_Street(obj.Street, DATA_CHANGED);
                                bindings.Update_EditableItem_CallOnArrival(obj.CallOnArrival, DATA_CHANGED);
                                bindings.Update_EditableItem_Intercom(obj.Intercom, DATA_CHANGED);
                                bindings.Update_EditableItem_Floor(obj.Floor, DATA_CHANGED);
                                bindings.Update_EditableItem_Entrance(obj.Entrance, DATA_CHANGED);
                                bindings.Update_EditableItem_Housing(obj.Housing, DATA_CHANGED);
                                bindings.Update_EditableItem_House(obj.House, DATA_CHANGED);
                                bindings.Update_EditableItem_Apartment(obj.Apartment, DATA_CHANGED);
                                bindings.Update_EditableItem_DeliveryTypeId(obj.DeliveryTypeId, DATA_CHANGED);
                                bindings.Update_EditableItem_DeliveryDate(obj.DeliveryDate, DATA_CHANGED);
                                bindings.Update_EditableItem_CreatedOn(obj.CreatedOn, DATA_CHANGED);
                                bindings.Update_EditableItem_IsDeliveryDateReadOnly(obj.IsDeliveryDateReadOnly, DATA_CHANGED);
                                bindings.Update_EditableItem_DeliveryTime(obj.DeliveryTime, DATA_CHANGED);
                                bindings.Update_EditableItem_RestaurantId(obj.RestaurantId, DATA_CHANGED);
                                bindings.Update_EditableItem_CanEditRestaurant(obj.CanEditRestaurant, DATA_CHANGED);
                                bindings.Update_EditableItem_OrderTypeId(obj.OrderTypeId, DATA_CHANGED);
                                bindings.Update_EditableItem_PaymentTypeId(obj.PaymentTypeId, DATA_CHANGED);
                                bindings.Update_EditableItem_Change(obj.Change, DATA_CHANGED);
                                bindings.Update_EditableItem_IsChangeVisible(obj.IsChangeVisible, DATA_CHANGED);
                                bindings.Update_EditableItem_StatusId(obj.StatusId, DATA_CHANGED);
                                bindings.Update_EditableItem_NumOfPeople(obj.NumOfPeople, DATA_CHANGED);
                                bindings.Update_EditableItem_SourceId(obj.SourceId, DATA_CHANGED);
                                bindings.Update_EditableItem_IsConfirmation(obj.IsConfirmation, DATA_CHANGED);
                                bindings.Update_EditableItem_Reason(obj.Reason, DATA_CHANGED);
                                bindings.Update_EditableItem_IsReasonVisible(obj.IsReasonVisible, DATA_CHANGED);
                                bindings.Update_EditableItem_PhoneNumber(obj.PhoneNumber, DATA_CHANGED);
                                bindings.Update_EditableItem_EditableCustomerName(obj.EditableCustomerName, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsAddressRequired":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_IsAddressRequired(obj.IsAddressRequired, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Comment":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Comment(obj.Comment, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CommentCustomer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CommentCustomer(obj.CommentCustomer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CommentAddress":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CommentAddress(obj.CommentAddress, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CityId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CityId(obj.CityId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Street":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Street(obj.Street, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CallOnArrival":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CallOnArrival(obj.CallOnArrival, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Intercom":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Intercom(obj.Intercom, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Floor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Floor(obj.Floor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Entrance":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Entrance(obj.Entrance, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Housing":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Housing(obj.Housing, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "House":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_House(obj.House, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Apartment":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Apartment(obj.Apartment, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DeliveryTypeId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_DeliveryTypeId(obj.DeliveryTypeId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DeliveryDate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_DeliveryDate(obj.DeliveryDate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreatedOn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CreatedOn(obj.CreatedOn, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsDeliveryDateReadOnly":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_IsDeliveryDateReadOnly(obj.IsDeliveryDateReadOnly, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DeliveryTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_DeliveryTime(obj.DeliveryTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RestaurantId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_RestaurantId(obj.RestaurantId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanEditRestaurant":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_CanEditRestaurant(obj.CanEditRestaurant, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OrderTypeId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_OrderTypeId(obj.OrderTypeId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PaymentTypeId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_PaymentTypeId(obj.PaymentTypeId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Change":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Change(obj.Change, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsChangeVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_IsChangeVisible(obj.IsChangeVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StatusId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_StatusId(obj.StatusId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NumOfPeople":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_NumOfPeople(obj.NumOfPeople, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SourceId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_SourceId(obj.SourceId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsConfirmation":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_IsConfirmation(obj.IsConfirmation, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Reason":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Reason(obj.Reason, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsReasonVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_IsReasonVisible(obj.IsReasonVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PhoneNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_PhoneNumber(obj.PhoneNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EditableCustomerName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_EditableCustomerName(obj.EditableCustomerName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderModel cache_EditableItem = null;
                public void UpdateChildListeners_EditableItem(global::Inventory.Models.OrderModel obj)
                {
                    if (obj != cache_EditableItem)
                    {
                        if (cache_EditableItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem).PropertyChanged -= PropertyChanged_EditableItem;
                            cache_EditableItem = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem;
                        }
                    }
                }
                public void PropertyChanged_EditableItem_Street(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.StreetModel obj = sender as global::Inventory.Models.StreetModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_EditableItem_Street_DisplayName(obj.DisplayName, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "DisplayName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_EditableItem_Street_DisplayName(obj.DisplayName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.StreetModel cache_EditableItem_Street = null;
                public void UpdateChildListeners_EditableItem_Street(global::Inventory.Models.StreetModel obj)
                {
                    if (obj != cache_EditableItem_Street)
                    {
                        if (cache_EditableItem_Street != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_EditableItem_Street).PropertyChanged -= PropertyChanged_EditableItem_Street;
                            cache_EditableItem_Street = null;
                        }
                        if (obj != null)
                        {
                            cache_EditableItem_Street = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_EditableItem_Street;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_6(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_7(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_8(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_11(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_12(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_13(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_14(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_15(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_16(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_17(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_18(global::Inventory.Controls.FormCalendarDatePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CalendarDatePicker.DateProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_Date();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Inventory.Controls.FormTimePicker sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TimePicker.TimeProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_Time();
                        }
                    });
                }
                public void RegisterTwoWayListener_20(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_21(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_21_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_22(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_22_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_23(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_24(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_25(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_25_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_26(global::Inventory.Controls.FormComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_26_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_27(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_28(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_29(global::Inventory.Controls.FormTextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_30(global::Inventory.Controls.CustomerSuggestBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Inventory.Controls.CustomerSuggestBox.DisplayTextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_30_DisplayText();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersDetails_Bindings
        {
            private global::Inventory.Views.OrdersDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj31;
            private global::Inventory.Controls.Details obj32;
            private global::Windows.UI.Xaml.Controls.Button obj33;
            private global::Inventory.Views.OrdersCard obj34;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj31VisibilityDisabled = false;
            private static bool isobj32DetailsContentDisabled = false;
            private static bool isobj32IsEditModeDisabled = false;
            private static bool isobj32EditCommandDisabled = false;
            private static bool isobj32DeleteCommandDisabled = false;
            private static bool isobj32SaveCommandDisabled = false;
            private static bool isobj32CancelCommandDisabled = false;
            private static bool isobj33VisibilityDisabled = false;
            private static bool isobj33CommandDisabled = false;
            private static bool isobj34ItemDisabled = false;

            private OrdersDetails_obj1_BindingsTracking bindingsTracking;

            public OrdersDetails_obj1_Bindings()
            {
                this.bindingsTracking = new OrdersDetails_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 127 && columnNumber == 11)
                {
                    isobj31VisibilityDisabled = true;
                }
                else if (lineNumber == 157 && columnNumber == 27)
                {
                    isobj32DetailsContentDisabled = true;
                }
                else if (lineNumber == 159 && columnNumber == 27)
                {
                    isobj32IsEditModeDisabled = true;
                }
                else if (lineNumber == 160 && columnNumber == 27)
                {
                    isobj32EditCommandDisabled = true;
                }
                else if (lineNumber == 161 && columnNumber == 27)
                {
                    isobj32DeleteCommandDisabled = true;
                }
                else if (lineNumber == 162 && columnNumber == 27)
                {
                    isobj32SaveCommandDisabled = true;
                }
                else if (lineNumber == 163 && columnNumber == 27)
                {
                    isobj32CancelCommandDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 25)
                {
                    isobj33VisibilityDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 135)
                {
                    isobj33CommandDisabled = true;
                }
                else if (lineNumber == 152 && columnNumber == 45)
                {
                    isobj34ItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 31: // Views\Orders\Details\OrdersDetails.xaml line 127
                        this.obj31 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 32: // Views\Orders\Details\OrdersDetails.xaml line 156
                        this.obj32 = (global::Inventory.Controls.Details)target;
                        break;
                    case 33: // Views\Orders\Details\OrdersDetails.xaml line 137
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 34: // Views\Orders\Details\OrdersDetails.xaml line 152
                        this.obj34 = (global::Inventory.Views.OrdersCard)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IOrdersDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.OrdersDetails)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.OrdersDetails obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.OrderDetailsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item(obj.Item, phase);
                        this.Update_ViewModel_IsEditMode(obj.IsEditMode, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditCommand(obj.EditCommand, phase);
                        this.Update_ViewModel_DeleteCommand(obj.DeleteCommand, phase);
                        this.Update_ViewModel_SaveCommand(obj.SaveCommand, phase);
                        this.Update_ViewModel_CancelCommand(obj.CancelCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CopiedItem(obj.CopiedItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_OrderCopyCommand(obj.OrderCopyCommand, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 156
                    if (!isobj32DetailsContentDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DetailsContent(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item(global::Inventory.Models.OrderModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item_IsEmpty(obj.IsEmpty, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 152
                    if (!isobj34ItemDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Views_OrdersCard_Item(this.obj34, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_IsEmpty(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 127
                    if (!isobj31VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj31, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("InverseBoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_IsEditMode(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 156
                    if (!isobj32IsEditModeDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_IsEditMode(this.obj32, obj);
                    }
                }
            }
            private void Update_ViewModel_EditCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 156
                    if (!isobj32EditCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_EditCommand(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 156
                    if (!isobj32DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_DeleteCommand(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 156
                    if (!isobj32SaveCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_SaveCommand(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 156
                    if (!isobj32CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_Details_CancelCommand(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CopiedItem(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 137
                    if (!isobj33VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj33, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_OrderCopyCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersDetails.xaml line 137
                    if (!isobj33CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj33, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersDetails_obj1_BindingsTracking
            {
                private global::System.WeakReference<OrdersDetails_obj1_Bindings> weakRefToBindingObj; 

                public OrdersDetails_obj1_BindingsTracking(OrdersDetails_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersDetails_obj1_Bindings>(obj);
                }

                public OrdersDetails_obj1_Bindings TryGetBindingObject()
                {
                    OrdersDetails_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Item(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.OrdersDetails obj = sender as global::Inventory.Views.OrdersDetails;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.OrdersDetails obj)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.OrdersDetails.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.OrdersDetails.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDetailsViewModel obj = sender as global::Inventory.ViewModels.OrderDetailsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                bindings.Update_ViewModel_CopiedItem(obj.CopiedItem, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsEditMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsEditMode(obj.IsEditMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CopiedItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CopiedItem(obj.CopiedItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.OrderDetailsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.OrderDetailsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersDetails_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderModel obj = sender as global::Inventory.Models.OrderModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item_IsEmpty(obj.IsEmpty, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsEmpty":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_IsEmpty(obj.IsEmpty, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderModel cache_ViewModel_Item = null;
                public void UpdateChildListeners_ViewModel_Item(global::Inventory.Models.OrderModel obj)
                {
                    if (obj != cache_ViewModel_Item)
                    {
                        if (cache_ViewModel_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Item).PropertyChanged -= PropertyChanged_ViewModel_Item;
                            cache_ViewModel_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Item;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 10: // Views\Orders\Details\OrdersDetails.xaml line 105
                {
                    global::Windows.UI.Xaml.Controls.ToggleSwitch element10 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                    ((global::Windows.UI.Xaml.Controls.ToggleSwitch)element10).PointerReleased += this.ToggleSwitch_PointerReleased;
                }
                break;
            case 27: // Views\Orders\Details\OrdersDetails.xaml line 50
                {
                    global::Windows.UI.Xaml.Controls.ToggleSwitch element27 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                    ((global::Windows.UI.Xaml.Controls.ToggleSwitch)element27).PointerReleased += this.ToggleSwitch_PointerReleased;
                }
                break;
            case 32: // Views\Orders\Details\OrdersDetails.xaml line 156
                {
                    this.details = (global::Inventory.Controls.Details)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Orders\Details\OrdersDetails.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    OrdersDetails_obj1_Bindings bindings = new OrdersDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 2: // Views\Orders\Details\OrdersDetails.xaml line 16
                {                    
                    global::Inventory.Controls.FluidGrid element2 = (global::Inventory.Controls.FluidGrid)target;
                    OrdersDetails_obj2_Bindings bindings = new OrdersDetails_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element2.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element2, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


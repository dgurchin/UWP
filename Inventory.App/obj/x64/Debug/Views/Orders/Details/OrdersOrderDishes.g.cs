#pragma checksum "D:\Delivery\src\Inventory.App\Views\Orders\Details\OrdersOrderDishes.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "F17309BA20246A146559B51111315937"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Views
{
    partial class OrdersOrderDishes : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Inventory_Controls_DataList_ItemsSource(global::Inventory.Controls.DataList obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Inventory_Controls_DataList_ItemSecondaryActionInvokedCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.ItemSecondaryActionInvokedCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_SelectedItem(global::Inventory.Controls.DataList obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Inventory_Controls_DataList_IsMultipleSelection(global::Inventory.Controls.DataList obj, global::System.Boolean value)
            {
                obj.IsMultipleSelection = value;
            }
            public static void Set_Inventory_Controls_DataList_ItemsCount(global::Inventory.Controls.DataList obj, global::System.Int32 value)
            {
                obj.ItemsCount = value;
            }
            public static void Set_Inventory_Controls_DataList_NewCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.NewCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_RefreshCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.RefreshCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_QuerySubmittedCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.QuerySubmittedCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_Query(global::Inventory.Controls.DataList obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Query = value ?? global::System.String.Empty;
            }
            public static void Set_Inventory_Controls_DataList_StartSelectionCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.StartSelectionCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_CancelSelectionCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelSelectionCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_SelectItemsCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.SelectItemsCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_DeselectItemsCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeselectItemsCommand = value;
            }
            public static void Set_Inventory_Controls_DataList_DeleteCommand(global::Inventory.Controls.DataList obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.DeleteCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersOrderDishes_obj11_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersOrderDishes_Bindings
        {
            private global::Inventory.Models.OrderIngredientModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;

            private OrdersOrderDishes_obj11_BindingsTracking bindingsTracking;

            public OrdersOrderDishes_obj11_Bindings()
            {
                this.bindingsTracking = new OrdersOrderDishes_obj11_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 88 && columnNumber == 44)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 44)
                {
                    isobj13TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // Views\Orders\Details\OrdersOrderDishes.xaml line 87
                        this.obj11 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 12: // Views\Orders\Details\OrdersOrderDishes.xaml line 88
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\Orders\Details\OrdersOrderDishes.xaml line 89
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj11.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.Models.OrderIngredientModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IOrdersOrderDishes_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Models.OrderIngredientModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Models.OrderIngredientModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                        this.Update_Price(obj.Price, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 88
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_Price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 89
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersOrderDishes_obj11_BindingsTracking
            {
                private global::System.WeakReference<OrdersOrderDishes_obj11_Bindings> weakRefToBindingObj; 

                public OrdersOrderDishes_obj11_BindingsTracking(OrdersOrderDishes_obj11_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersOrderDishes_obj11_Bindings>(obj);
                }

                public OrdersOrderDishes_obj11_Bindings TryGetBindingObject()
                {
                    OrdersOrderDishes_obj11_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersOrderDishes_obj11_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderIngredientModel obj = sender as global::Inventory.Models.OrderIngredientModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_Price(obj.Price, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Price":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Price(obj.Price, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.Models.OrderIngredientModel obj)
                {
                    OrdersOrderDishes_obj11_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersOrderDishes_obj15_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersOrderDishes_Bindings
        {
            private global::Inventory.Models.OrderGarnishModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj15;
            private global::Windows.UI.Xaml.Controls.TextBlock obj16;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj16TextDisabled = false;
            private static bool isobj17TextDisabled = false;

            private OrdersOrderDishes_obj15_BindingsTracking bindingsTracking;

            public OrdersOrderDishes_obj15_Bindings()
            {
                this.bindingsTracking = new OrdersOrderDishes_obj15_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 68 && columnNumber == 44)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 44)
                {
                    isobj17TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 15: // Views\Orders\Details\OrdersOrderDishes.xaml line 67
                        this.obj15 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 16: // Views\Orders\Details\OrdersOrderDishes.xaml line 68
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 17: // Views\Orders\Details\OrdersOrderDishes.xaml line 69
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj15.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Inventory.Models.OrderGarnishModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IOrdersOrderDishes_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Models.OrderGarnishModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Models.OrderGarnishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                        this.Update_Price(obj.Price, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 68
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_Price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 69
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersOrderDishes_obj15_BindingsTracking
            {
                private global::System.WeakReference<OrdersOrderDishes_obj15_Bindings> weakRefToBindingObj; 

                public OrdersOrderDishes_obj15_BindingsTracking(OrdersOrderDishes_obj15_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersOrderDishes_obj15_Bindings>(obj);
                }

                public OrdersOrderDishes_obj15_Bindings TryGetBindingObject()
                {
                    OrdersOrderDishes_obj15_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersOrderDishes_obj15_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderGarnishModel obj = sender as global::Inventory.Models.OrderGarnishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_Price(obj.Price, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Price":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Price(obj.Price, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.Models.OrderGarnishModel obj)
                {
                    OrdersOrderDishes_obj15_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersOrderDishes_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersOrderDishes_Bindings
        {
            private global::Inventory.Models.OrderDishModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.Grid obj8;
            private global::Windows.UI.Xaml.Controls.Grid obj9;
            private global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj10;
            private global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj14;
            private global::Windows.UI.Xaml.Controls.Image obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3TextDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8VisibilityDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10ItemsSourceDisabled = false;
            private static bool isobj14ItemsSourceDisabled = false;
            private static bool isobj18SourceDisabled = false;

            private OrdersOrderDishes_obj2_BindingsTracking bindingsTracking;

            public OrdersOrderDishes_obj2_Bindings()
            {
                this.bindingsTracking = new OrdersOrderDishes_obj2_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 49 && columnNumber == 44)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 44)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 44)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 44)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 44)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 56)
                {
                    isobj8VisibilityDisabled = true;
                }
                else if (lineNumber == 76 && columnNumber == 56)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 68)
                {
                    isobj10ItemsSourceDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 68)
                {
                    isobj14ItemsSourceDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 28)
                {
                    isobj18SourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Orders\Details\OrdersOrderDishes.xaml line 32
                        this.obj2 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 3: // Views\Orders\Details\OrdersOrderDishes.xaml line 49
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\Orders\Details\OrdersOrderDishes.xaml line 50
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // Views\Orders\Details\OrdersOrderDishes.xaml line 51
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6: // Views\Orders\Details\OrdersOrderDishes.xaml line 52
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7: // Views\Orders\Details\OrdersOrderDishes.xaml line 53
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Views\Orders\Details\OrdersOrderDishes.xaml line 56
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 9: // Views\Orders\Details\OrdersOrderDishes.xaml line 76
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 10: // Views\Orders\Details\OrdersOrderDishes.xaml line 82
                        this.obj10 = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)target;
                        break;
                    case 14: // Views\Orders\Details\OrdersOrderDishes.xaml line 62
                        this.obj14 = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)target;
                        break;
                    case 18: // Views\Orders\Details\OrdersOrderDishes.xaml line 47
                        this.obj18 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = 2;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj2.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                    case 2:
                        global::Windows.UI.Xaml.Markup.XamlBindingHelper.ResumeRendering(this.obj18);
                        nextPhase = -1;
                        break;
                }
                this.Update_((global::Inventory.Models.OrderDishModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
                global::Windows.UI.Xaml.Markup.XamlBindingHelper.SuspendRendering(this.obj18);
            }

            // IOrdersOrderDishes_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Models.OrderDishModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Models.OrderDishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Quantity(obj.Quantity, phase);
                        this.Update_Price(obj.Price, phase);
                        this.Update_Discount(obj.Discount, phase);
                        this.Update_Total(obj.Total, phase);
                        this.Update_HasGarnishes(obj.HasGarnishes, phase);
                        this.Update_HasIngredients(obj.HasIngredients, phase);
                        this.Update_Ingredients(obj.Ingredients, phase);
                        this.Update_Garnishes(obj.Garnishes, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0) | (1 << 2))) != 0)
                    {
                        this.Update_Dish(obj.Dish, phase);
                    }
                }
            }
            private void Update_Dish(global::Inventory.Models.DishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Dish(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Dish_Name(obj.Name, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0) | (1 << 2))) != 0)
                    {
                        this.Update_Dish_ThumbnailSource(obj.ThumbnailSource, phase);
                    }
                }
            }
            private void Update_Dish_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 49
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_Quantity(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 50
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 51
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Discount(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 52
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Total(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 53
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, (global::System.String)this.LookupConverter("DecimalConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_HasGarnishes(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 56
                    if (!isobj8VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_HasIngredients(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 76
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_Ingredients(global::System.Collections.Generic.IList<global::Inventory.Models.OrderIngredientModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 82
                    if (!isobj10ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(this.obj10, obj, null);
                    }
                }
            }
            private void Update_Garnishes(global::System.Collections.Generic.IList<global::Inventory.Models.OrderGarnishModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 62
                    if (!isobj14ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(this.obj14, obj, null);
                    }
                }
            }
            private void Update_Dish_ThumbnailSource(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 2) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 47
                    if (!isobj18SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj18, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ObjectToImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersOrderDishes_obj2_BindingsTracking
            {
                private global::System.WeakReference<OrdersOrderDishes_obj2_Bindings> weakRefToBindingObj; 

                public OrdersOrderDishes_obj2_BindingsTracking(OrdersOrderDishes_obj2_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersOrderDishes_obj2_Bindings>(obj);
                }

                public OrdersOrderDishes_obj2_Bindings TryGetBindingObject()
                {
                    OrdersOrderDishes_obj2_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Dish(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersOrderDishes_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderDishModel obj = sender as global::Inventory.Models.OrderDishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Quantity(obj.Quantity, DATA_CHANGED);
                                bindings.Update_Price(obj.Price, DATA_CHANGED);
                                bindings.Update_Discount(obj.Discount, DATA_CHANGED);
                                bindings.Update_Total(obj.Total, DATA_CHANGED);
                                bindings.Update_HasGarnishes(obj.HasGarnishes, DATA_CHANGED);
                                bindings.Update_HasIngredients(obj.HasIngredients, DATA_CHANGED);
                                bindings.Update_Ingredients(obj.Ingredients, DATA_CHANGED);
                                bindings.Update_Garnishes(obj.Garnishes, DATA_CHANGED);
                                bindings.Update_Dish(obj.Dish, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Dish":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Dish(obj.Dish, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Quantity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Quantity(obj.Quantity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Price":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Price(obj.Price, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Discount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Discount(obj.Discount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Total":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Total(obj.Total, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasGarnishes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_HasGarnishes(obj.HasGarnishes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasIngredients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_HasIngredients(obj.HasIngredients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Ingredients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Ingredients(obj.Ingredients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Garnishes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Garnishes(obj.Garnishes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Inventory.Models.OrderDishModel obj)
                {
                    OrdersOrderDishes_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_Dish(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersOrderDishes_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.DishModel obj = sender as global::Inventory.Models.DishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Dish_ThumbnailSource(obj.ThumbnailSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ThumbnailSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Dish_ThumbnailSource(obj.ThumbnailSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.DishModel cache_Dish = null;
                public void UpdateChildListeners_Dish(global::Inventory.Models.DishModel obj)
                {
                    if (obj != cache_Dish)
                    {
                        if (cache_Dish != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Dish).PropertyChanged -= PropertyChanged_Dish;
                            cache_Dish = null;
                        }
                        if (obj != null)
                        {
                            cache_Dish = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Dish;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OrdersOrderDishes_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOrdersOrderDishes_Bindings
        {
            private global::Inventory.Views.OrdersOrderDishes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Inventory.Controls.DataList obj20;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj20ItemsSourceDisabled = false;
            private static bool isobj20ItemSecondaryActionInvokedCommandDisabled = false;
            private static bool isobj20SelectedItemDisabled = false;
            private static bool isobj20IsMultipleSelectionDisabled = false;
            private static bool isobj20ItemsCountDisabled = false;
            private static bool isobj20NewCommandDisabled = false;
            private static bool isobj20RefreshCommandDisabled = false;
            private static bool isobj20QueryDisabled = false;
            private static bool isobj20QuerySubmittedCommandDisabled = false;
            private static bool isobj20StartSelectionCommandDisabled = false;
            private static bool isobj20CancelSelectionCommandDisabled = false;
            private static bool isobj20SelectItemsCommandDisabled = false;
            private static bool isobj20DeselectItemsCommandDisabled = false;
            private static bool isobj20DeleteCommandDisabled = false;

            private OrdersOrderDishes_obj1_BindingsTracking bindingsTracking;

            public OrdersOrderDishes_obj1_Bindings()
            {
                this.bindingsTracking = new OrdersOrderDishes_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 104 && columnNumber == 28)
                {
                    isobj20ItemsSourceDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 28)
                {
                    isobj20ItemSecondaryActionInvokedCommandDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 28)
                {
                    isobj20SelectedItemDisabled = true;
                }
                else if (lineNumber == 111 && columnNumber == 28)
                {
                    isobj20IsMultipleSelectionDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 28)
                {
                    isobj20ItemsCountDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 28)
                {
                    isobj20NewCommandDisabled = true;
                }
                else if (lineNumber == 114 && columnNumber == 28)
                {
                    isobj20RefreshCommandDisabled = true;
                }
                else if (lineNumber == 115 && columnNumber == 28)
                {
                    isobj20QueryDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 28)
                {
                    isobj20QuerySubmittedCommandDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 28)
                {
                    isobj20StartSelectionCommandDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 28)
                {
                    isobj20CancelSelectionCommandDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 28)
                {
                    isobj20SelectItemsCommandDisabled = true;
                }
                else if (lineNumber == 120 && columnNumber == 28)
                {
                    isobj20DeselectItemsCommandDisabled = true;
                }
                else if (lineNumber == 121 && columnNumber == 28)
                {
                    isobj20DeleteCommandDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 20: // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                        this.obj20 = (global::Inventory.Controls.DataList)target;
                        this.bindingsTracking.RegisterTwoWayListener_20(this.obj20);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IOrdersOrderDishes_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Inventory.Views.OrdersOrderDishes)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Inventory.Views.OrdersOrderDishes obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Inventory.ViewModels.OrderDishListViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Items(obj.Items, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_OpenInNewViewCommand(obj.OpenInNewViewCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedItem(obj.SelectedItem, phase);
                        this.Update_ViewModel_IsMultipleSelection(obj.IsMultipleSelection, phase);
                        this.Update_ViewModel_ItemsCount(obj.ItemsCount, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_NewCommand(obj.NewCommand, phase);
                        this.Update_ViewModel_RefreshCommand(obj.RefreshCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Query(obj.Query, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_StartSelectionCommand(obj.StartSelectionCommand, phase);
                        this.Update_ViewModel_CancelSelectionCommand(obj.CancelSelectionCommand, phase);
                        this.Update_ViewModel_SelectItemsCommand(obj.SelectItemsCommand, phase);
                        this.Update_ViewModel_DeselectItemsCommand(obj.DeselectItemsCommand, phase);
                        this.Update_ViewModel_DeleteSelectionCommand(obj.DeleteSelectionCommand, phase);
                    }
                }
            }
            private void Update_ViewModel_Items(global::System.Collections.Generic.IList<global::Inventory.Models.OrderDishModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_ItemsSource(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_OpenInNewViewCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20ItemSecondaryActionInvokedCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_ItemSecondaryActionInvokedCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedItem(global::Inventory.Models.OrderDishModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedItem(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_SelectedItem(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsMultipleSelection(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20IsMultipleSelectionDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_IsMultipleSelection(this.obj20, obj);
                    }
                }
            }
            private void Update_ViewModel_ItemsCount(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20ItemsCountDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_ItemsCount(this.obj20, obj);
                    }
                }
            }
            private void Update_ViewModel_NewCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20NewCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_NewCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_RefreshCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20RefreshCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_RefreshCommand(this.obj20, obj, null);
                    }
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20QuerySubmittedCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_QuerySubmittedCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Query(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20QueryDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_Query(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_StartSelectionCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20StartSelectionCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_StartSelectionCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CancelSelectionCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20CancelSelectionCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_CancelSelectionCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectItemsCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20SelectItemsCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_SelectItemsCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeselectItemsCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20DeselectItemsCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_DeselectItemsCommand(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteSelectionCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Orders\Details\OrdersOrderDishes.xaml line 104
                    if (!isobj20DeleteCommandDisabled)
                    {
                        XamlBindingSetters.Set_Inventory_Controls_DataList_DeleteCommand(this.obj20, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_20_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedItem = (global::Inventory.Models.OrderDishModel)this.obj20.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_IsMultipleSelection()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsMultipleSelection = this.obj20.IsMultipleSelection;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_Query()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.Query = this.obj20.Query;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OrdersOrderDishes_obj1_BindingsTracking
            {
                private global::System.WeakReference<OrdersOrderDishes_obj1_Bindings> weakRefToBindingObj; 

                public OrdersOrderDishes_obj1_BindingsTracking(OrdersOrderDishes_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OrdersOrderDishes_obj1_Bindings>(obj);
                }

                public OrdersOrderDishes_obj1_Bindings TryGetBindingObject()
                {
                    OrdersOrderDishes_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_SelectedItem(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    OrdersOrderDishes_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Inventory.Views.OrdersOrderDishes obj = sender as global::Inventory.Views.OrdersOrderDishes;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::Inventory.Views.OrdersOrderDishes obj)
                {
                    OrdersOrderDishes_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Inventory.Views.OrdersOrderDishes.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::Inventory.Views.OrdersOrderDishes.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersOrderDishes_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.ViewModels.OrderDishListViewModel obj = sender as global::Inventory.ViewModels.OrderDishListViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Items(obj.Items, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedItem(obj.SelectedItem, DATA_CHANGED);
                                bindings.Update_ViewModel_IsMultipleSelection(obj.IsMultipleSelection, DATA_CHANGED);
                                bindings.Update_ViewModel_ItemsCount(obj.ItemsCount, DATA_CHANGED);
                                bindings.Update_ViewModel_Query(obj.Query, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Items":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Items(obj.Items, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedItem(obj.SelectedItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsMultipleSelection":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsMultipleSelection(obj.IsMultipleSelection, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ItemsCount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ItemsCount(obj.ItemsCount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Query":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Query(obj.Query, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.ViewModels.OrderDishListViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Inventory.ViewModels.OrderDishListViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OrdersOrderDishes_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Inventory.Models.OrderDishModel obj = sender as global::Inventory.Models.OrderDishModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Inventory.Models.OrderDishModel cache_ViewModel_SelectedItem = null;
                public void UpdateChildListeners_ViewModel_SelectedItem(global::Inventory.Models.OrderDishModel obj)
                {
                    if (obj != cache_ViewModel_SelectedItem)
                    {
                        if (cache_ViewModel_SelectedItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedItem).PropertyChanged -= PropertyChanged_ViewModel_SelectedItem;
                            cache_ViewModel_SelectedItem = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedItem;
                        }
                    }
                }
                public void RegisterTwoWayListener_20(global::Inventory.Controls.DataList sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Inventory.Controls.DataList.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_SelectedItem();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Inventory.Controls.DataList.IsMultipleSelectionProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_IsMultipleSelection();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Inventory.Controls.DataList.QueryProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_Query();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Orders\Details\OrdersOrderDishes.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    OrdersOrderDishes_obj1_Bindings bindings = new OrdersOrderDishes_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 2: // Views\Orders\Details\OrdersOrderDishes.xaml line 32
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    OrdersOrderDishes_obj2_Bindings bindings = new OrdersOrderDishes_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element2.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element2, bindings);
                }
                break;
            case 11: // Views\Orders\Details\OrdersOrderDishes.xaml line 87
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element11 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    OrdersOrderDishes_obj11_Bindings bindings = new OrdersOrderDishes_obj11_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element11.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element11.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element11, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element11, bindings);
                }
                break;
            case 15: // Views\Orders\Details\OrdersOrderDishes.xaml line 67
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element15 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    OrdersOrderDishes_obj15_Bindings bindings = new OrdersOrderDishes_obj15_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element15.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element15.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element15, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element15, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

